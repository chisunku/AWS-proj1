{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as o from \"react\";\nimport a from \"classnames\";\nimport { classNameModifier as t, classNameModifierByFlag as n } from \"../shared/utils.js\";\nimport { ComponentClassNames as r } from \"../shared/constants.js\";\nimport { View as s } from \"../View/View.js\";\nconst i = o.forwardRef((i, l) => {\n  var {\n      autoComplete: u,\n      checked: d,\n      className: p,\n      defaultChecked: c,\n      defaultValue: m,\n      id: h,\n      isDisabled: C,\n      isReadOnly: f,\n      isRequired: y,\n      size: v,\n      type: I = \"text\",\n      hasError: k = !1,\n      value: b,\n      variation: R,\n      onBlur: V,\n      onChange: g,\n      onCopy: j,\n      onCut: F,\n      onFocus: N,\n      onInput: O,\n      onPaste: q,\n      onSelect: w,\n      onWheel: z\n    } = i,\n    B = e(i, [\"autoComplete\", \"checked\", \"className\", \"defaultChecked\", \"defaultValue\", \"id\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"size\", \"type\", \"hasError\", \"value\", \"variation\", \"onBlur\", \"onChange\", \"onCopy\", \"onCut\", \"onFocus\", \"onInput\", \"onPaste\", \"onSelect\", \"onWheel\"]);\n  const D = a(r.Input, r.FieldGroupControl, t(r.Input, R), n(r.Input, \"error\", k), t(r.Input, v), p);\n  return o.createElement(s, Object.assign({\n    \"aria-invalid\": k,\n    as: \"input\",\n    autoComplete: u,\n    checked: d,\n    className: D,\n    \"data-size\": v,\n    \"data-variation\": R,\n    defaultChecked: c,\n    defaultValue: m,\n    isDisabled: C,\n    id: h,\n    onBlur: V,\n    onChange: g,\n    onCopy: j,\n    onCut: F,\n    onFocus: N,\n    onInput: O,\n    onPaste: q,\n    onSelect: w,\n    onWheel: z,\n    readOnly: f,\n    ref: l,\n    required: y,\n    type: I,\n    value: b\n  }, B));\n});\ni.displayName = \"Input\";\nexport { i as Input };","map":null,"metadata":{},"sourceType":"module"}