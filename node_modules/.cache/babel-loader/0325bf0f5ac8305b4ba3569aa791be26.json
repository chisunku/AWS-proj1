{"ast":null,"code":"import { __rest as t } from \"tslib\";\nimport a from \"classnames\";\nimport * as e from \"react\";\nimport { classNameModifier as i, classNameModifierByFlag as s } from \"../shared/utils.js\";\nimport { ComponentClassNames as o } from \"../shared/constants.js\";\nimport { Flex as r } from \"../Flex/Flex.js\";\nimport { Loader as l } from \"../Loader/Loader.js\";\nimport { View as n } from \"../View/View.js\";\nconst d = e.forwardRef((d, m) => {\n  var {\n      className: p,\n      children: u,\n      isFullWidth: c = !1,\n      isDisabled: f,\n      isLoading: b,\n      loadingText: h = \"\",\n      size: B,\n      type: g = \"button\",\n      variation: j\n    } = d,\n    w = t(d, [\"className\", \"children\", \"isFullWidth\", \"isDisabled\", \"isLoading\", \"loadingText\", \"size\", \"type\", \"variation\"]);\n  const x = a(o.Button, o.FieldGroupControl, i(o.Button, j), i(o.Button, B), s(o.Button, \"disabled\", f || b || w.disabled), s(o.Button, \"loading\", b), s(o.Button, \"fullwidth\", c), p);\n  return e.createElement(n, Object.assign({\n    ref: m,\n    as: \"button\",\n    className: x,\n    \"data-fullwidth\": c,\n    \"data-loading\": b,\n    \"data-size\": B,\n    \"data-variation\": j,\n    isDisabled: f || b,\n    type: g\n  }, w), b && h ? e.createElement(r, {\n    as: \"span\",\n    className: o.ButtonLoaderWrapper\n  }, e.createElement(l, {\n    size: B\n  }), h) : u);\n});\nd.displayName = \"Button\";\nexport { d as Button };","map":null,"metadata":{},"sourceType":"module"}