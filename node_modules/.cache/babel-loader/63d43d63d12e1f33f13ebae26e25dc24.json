{"ast":null,"code":"//import axios from \"axios\";\n//import * as AWS from 'aws-sdk/global';\n\nglobal.fetch = require('node-fetch');\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\nexport const dataService = {\n  getUserData,\n  getAdminData,\n  uploadFile,\n  deleteFile,\n  getUser\n};\nexport const apiConfig = {\n  endpointURL: \"http://localhost:8080\"\n};\nfunction getUserData(userName) {\n  console.log(\"user\" + userName);\n  const requestOption = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`${apiConfig.endpointURL}/getUserData/${userName}`, requestOption).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nfunction getAdminData() {\n  const requestOption = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`${apiConfig.endpointURL}/getAdminData`, requestOption).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nfunction uploadFile(inputFile, userData, description) {\n  const formData = new FormData();\n  formData.append('file', inputFile);\n  formData.append('first_name', userData);\n  formData.append('last_name', userData);\n  formData.append('desc', description);\n  console.log(`UserNAme: ${userData}, desc: ${description}`);\n  const requestOption = {\n    method: 'GET',\n    body: formData\n    // headers: { \"Content-Type\": inputFile.type }\n  };\n\n  return fetch(`${apiConfig.endpointURL}/`, requestOption).then(res => {\n    console.log(res);\n    return res;\n  });\n}\nfunction deleteFile(fileName, id) {\n  const requestOption = {\n    method: 'DELETE',\n    body: JSON.stringify({\n      \"deleteFile\": fileName,\n      \"userId\": id\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`${apiConfig.endpointURL}/delete_file`, requestOption);\n}\nfunction getUser() {\n  var poolData = {\n    UserPoolId: 'us-west-2_YBN0LoINM',\n    ClientId: '6du6tkbf7lvqhdl5evnn6vc7sm'\n  };\n  var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n  var cognitoUser = userPool.getCurrentUser();\n  console.log(\"cognito user\", cognitoUser);\n  if (cognitoUser != null) {\n    cognitoUser.getSession(function (err, session) {\n      if (err) {\n        alert(err.message || JSON.stringify(err));\n        return;\n      }\n      console.log('session validity: ' + session.isValid());\n\n      // NOTE: getSession must be called to authenticate user before calling getUserAttributes\n      cognitoUser.getUserAttributes(function (err, attributes) {\n        if (err) {\n          // Handle error\n          console.log(err);\n        } else {\n          // Do something with attributes\n          console.log(attributes);\n        }\n      });\n\n      /*             AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n                      IdentityPoolId: 'us-west-2_YBN0LoINM',\n                      Logins: {\n                          \n                          'cognito-idp.us-west-2.amazonaws.com/us-west-2_YBN0LoINM': session\n                              .getIdToken()\n                              .getJwtToken(),\n                      },\n                  });\n       */\n      // Instantiate aws sdk service objects now that the credentials have been updated.\n      // example: var s3 = new AWS.S3();\n    });\n  }\n}","map":{"version":3,"names":["global","fetch","require","AmazonCognitoIdentity","dataService","getUserData","getAdminData","uploadFile","deleteFile","getUser","apiConfig","endpointURL","userName","console","log","requestOption","method","headers","then","res","json","inputFile","userData","description","formData","FormData","append","body","fileName","id","JSON","stringify","poolData","UserPoolId","ClientId","userPool","CognitoUserPool","cognitoUser","getCurrentUser","getSession","err","session","alert","message","isValid","getUserAttributes","attributes"],"sources":["/Users/sunku/Downloads/DropBucket-CMPE281-master/src/services/dataService.js"],"sourcesContent":["//import axios from \"axios\";\n//import * as AWS from 'aws-sdk/global';\n\nglobal.fetch = require('node-fetch');\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\n\nexport const dataService = {\n    getUserData,\n    getAdminData,\n    uploadFile,\n    deleteFile,\n    getUser,\n\n}\n\nexport const apiConfig = {\n    endpointURL: \"http://localhost:8080\"\n}\n\nfunction getUserData(userName) {\n    console.log(\"user\"+userName);\n    const requestOption = {\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`${apiConfig.endpointURL}/getUserData/${userName}`, requestOption).then(res => {\n        console.log(res); \n        return res.json();\n    })\n}\n\nfunction getAdminData() {\n\n    const requestOption = {\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`${apiConfig.endpointURL}/getAdminData`, requestOption).then(res => {\n        console.log(res); \n        return res.json();\n    })\n}\n\nfunction uploadFile(inputFile, userData, description) {\n    const formData = new FormData();\n    formData.append('file', inputFile);\n    formData.append('first_name', userData);\n    formData.append('last_name', userData);\n    formData.append('desc', description);\n    console.log(`UserNAme: ${userData}, desc: ${description}`);\n    const requestOption = {\n        method: 'GET',\n        body: formData,\n       // headers: { \"Content-Type\": inputFile.type }\n    }\n    return fetch(`${apiConfig.endpointURL}/`, requestOption).then(res => {\n      console.log(res);\n        return res;\n    })\n}\nfunction deleteFile(fileName,id) {\n    const requestOption = {\n        method: 'DELETE',\n        body: JSON.stringify({\n            \"deleteFile\": fileName,\n            \"userId\": id\n        }),\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`${apiConfig.endpointURL}/delete_file`, requestOption)\n}\n\n\nfunction getUser() {\n    var poolData = {\n        UserPoolId: 'us-west-2_YBN0LoINM', \n        ClientId: '6du6tkbf7lvqhdl5evnn6vc7sm', \n    };\n    var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n    var cognitoUser = userPool.getCurrentUser();\n\n    console.log(\"cognito user\", cognitoUser);\n    \n    if (cognitoUser != null) {\n        cognitoUser.getSession(function(err, session) {\n            if (err) {\n                alert(err.message || JSON.stringify(err));\n                return;\n            }\n            console.log('session validity: ' + session.isValid());\n    \n            // NOTE: getSession must be called to authenticate user before calling getUserAttributes\n            cognitoUser.getUserAttributes(function(err, attributes) {\n                if (err) {\n                    // Handle error\n                    console.log(err);\n                } else {\n                    // Do something with attributes\n                    console.log(attributes);\n                }\n            });\n    \n/*             AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n                IdentityPoolId: 'us-west-2_YBN0LoINM',\n                Logins: {\n                    \n                    'cognito-idp.us-west-2.amazonaws.com/us-west-2_YBN0LoINM': session\n                        .getIdToken()\n                        .getJwtToken(),\n                },\n            });\n */    \n            // Instantiate aws sdk service objects now that the credentials have been updated.\n            // example: var s3 = new AWS.S3();\n        });\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}