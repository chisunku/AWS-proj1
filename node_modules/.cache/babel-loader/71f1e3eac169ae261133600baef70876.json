{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as r from \"react\";\nimport t from \"classnames\";\nimport { ComponentClassNames as s } from \"../shared/constants.js\";\nimport \"../Field/FieldClearButton.js\";\nimport { FieldDescription as i } from \"../Field/FieldDescription.js\";\nimport { FieldErrorMessage as l } from \"../Field/FieldErrorMessage.js\";\nimport { Flex as o } from \"../Flex/Flex.js\";\nimport { Label as a } from \"../Label/Label.js\";\nimport { Select as d } from \"../Select/Select.js\";\nimport { splitPrimitiveProps as n } from \"../shared/styleUtils.js\";\nimport { useStableId as m } from \"../utils/useStableId.js\";\nconst c = r.forwardRef((c, p) => {\n  const {\n      children: f,\n      className: h,\n      descriptiveText: b,\n      errorMessage: F,\n      hasError: j = !1,\n      id: E,\n      label: u,\n      labelHidden: g = !1,\n      options: v,\n      size: y,\n      testId: S\n    } = c,\n    x = e(c, [\"children\", \"className\", \"descriptiveText\", \"errorMessage\", \"hasError\", \"id\", \"label\", \"labelHidden\", \"options\", \"size\", \"testId\"]),\n    I = m(E),\n    z = m(),\n    H = b ? z : void 0,\n    {\n      flexContainerStyleProps: M,\n      baseStyleProps: N,\n      rest: T\n    } = n(x);\n  return r.createElement(o, Object.assign({\n    className: t(s.Field, s.SelectField, h),\n    \"data-size\": y,\n    testId: S\n  }, N, M), r.createElement(a, {\n    htmlFor: I,\n    visuallyHidden: g\n  }, u), r.createElement(i, {\n    id: z,\n    labelHidden: g,\n    descriptiveText: b\n  }), r.createElement(d, Object.assign({\n    \"aria-describedby\": H,\n    hasError: j,\n    id: I,\n    ref: p,\n    size: y\n  }, T), (_ref => {\n    let {\n      children: e,\n      options: t\n    } = _ref;\n    return e ? ((null == t ? void 0 : t.length) && console.warn(\"Amplify UI: <SelectField> component  defaults to rendering children over `options`. When using the `options` prop, omit children.\"), e) : null == t ? void 0 : t.map((e, t) => r.createElement(\"option\", {\n      label: e,\n      value: e,\n      key: `${e}-${t}`\n    }, e));\n  })({\n    children: f,\n    options: v\n  })), r.createElement(l, {\n    hasError: j,\n    errorMessage: F\n  }));\n});\nc.displayName = \"SelectField\";\nexport { c as SelectField };","map":null,"metadata":{},"sourceType":"module"}