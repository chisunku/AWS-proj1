{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as r from \"react\";\nimport a from \"classnames\";\nimport { ComponentClassNames as i } from \"../shared/constants.js\";\nimport \"../Field/FieldClearButton.js\";\nimport { FieldDescription as l } from \"../Field/FieldDescription.js\";\nimport { FieldErrorMessage as s } from \"../Field/FieldErrorMessage.js\";\nimport { Flex as o } from \"../Flex/Flex.js\";\nimport { Label as d } from \"../Label/Label.js\";\nimport { RadioGroupContext as t } from \"./context.js\";\nimport { useStableId as n } from \"../utils/useStableId.js\";\nconst m = r.forwardRef((m, c) => {\n  var {\n      children: u,\n      className: p,\n      defaultValue: b,\n      descriptiveText: f,\n      errorMessage: E,\n      hasError: F = !1,\n      id: h,\n      isDisabled: v,\n      isRequired: R,\n      isReadOnly: g,\n      label: j,\n      labelHidden: x = !1,\n      labelPosition: y,\n      onChange: M,\n      name: N,\n      size: z,\n      value: C\n    } = m,\n    D = e(m, [\"children\", \"className\", \"defaultValue\", \"descriptiveText\", \"errorMessage\", \"hasError\", \"id\", \"isDisabled\", \"isRequired\", \"isReadOnly\", \"label\", \"labelHidden\", \"labelPosition\", \"onChange\", \"name\", \"size\", \"value\"]);\n  const G = n(h),\n    H = n(),\n    O = n(),\n    P = f ? O : void 0,\n    V = r.useMemo(() => ({\n      currentValue: C,\n      defaultValue: b,\n      hasError: F,\n      isRequired: R,\n      isReadOnly: g,\n      isGroupDisabled: v,\n      onChange: M,\n      size: z,\n      name: N,\n      labelPosition: y\n    }), [b, F, v, R, g, M, z, N, C, y]);\n  return r.createElement(o, Object.assign({\n    className: a(i.Field, i.RadioGroupField, p),\n    \"data-size\": z,\n    ref: c\n  }, D), r.createElement(d, {\n    id: H,\n    visuallyHidden: x\n  }, j), r.createElement(l, {\n    id: O,\n    labelHidden: x,\n    descriptiveText: f\n  }), r.createElement(o, {\n    \"aria-describedby\": P,\n    \"aria-labelledby\": H,\n    className: i.RadioGroup,\n    id: G,\n    role: \"radiogroup\"\n  }, r.createElement(t.Provider, {\n    value: V\n  }, u)), r.createElement(s, {\n    hasError: F,\n    errorMessage: E\n  }));\n});\nm.displayName = \"RadioGroupField\";\nexport { m as RadioGroupField };","map":null,"metadata":{},"sourceType":"module"}