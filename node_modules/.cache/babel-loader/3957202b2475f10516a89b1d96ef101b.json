{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteJourneyRequest, DeleteJourneyResponse } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteJourneyCommand, serializeAws_restJson1DeleteJourneyCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Deletes a journey from an application.</p>\n */\nvar DeleteJourneyCommand = /** @class */function (_super) {\n  __extends(DeleteJourneyCommand, _super);\n  // Start section: command_properties\n  // End section: command_properties\n  function DeleteJourneyCommand(input) {\n    var _this =\n    // Start section: command_constructor\n    _super.call(this) || this;\n    _this.input = input;\n    return _this;\n    // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n  DeleteJourneyCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PinpointClient\";\n    var commandName = \"DeleteJourneyCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteJourneyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteJourneyResponse.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n  DeleteJourneyCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1DeleteJourneyCommand(input, context);\n  };\n  DeleteJourneyCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1DeleteJourneyCommand(output, context);\n  };\n  return DeleteJourneyCommand;\n}($Command);\nexport { DeleteJourneyCommand };","map":null,"metadata":{},"sourceType":"module"}