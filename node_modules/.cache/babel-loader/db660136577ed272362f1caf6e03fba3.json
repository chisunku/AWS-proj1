{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport a from \"classnames\";\nimport { Root as t, List as r, Content as n, Trigger as s } from \"@radix-ui/react-tabs\";\nimport * as l from \"react\";\nimport { ComponentClassNames as i } from \"../shared/constants.js\";\nimport { Flex as o } from \"../Flex/Flex.js\";\nimport { View as c } from \"../View/View.js\";\nconst m = e => null !== e && \"object\" == typeof e && e.hasOwnProperty(\"props\") && null != e.props.title,\n  p = l.forwardRef((s, c) => {\n    var {\n        ariaLabel: p,\n        children: d,\n        className: f,\n        defaultIndex: u = 0,\n        currentIndex: b,\n        onChange: g,\n        indicatorPosition: h,\n        spacing: y\n      } = s,\n      x = e(s, [\"ariaLabel\", \"children\", \"className\", \"defaultIndex\", \"currentIndex\", \"onChange\", \"indicatorPosition\", \"spacing\"]);\n    const I = l.Children.map(d, e => null === e || \"string\" == typeof e && /\\s/.test(e) ? {} : m(e) ? e.props : (console.warn(\"Amplify UI: <Tabs> component only accepts <TabItem> as children.\"), {})),\n      N = {\n        defaultValue: u.toString(),\n        value: null != b ? b.toString() : void 0,\n        onValueChange: g\n      };\n    return l.createElement(t, Object.assign({}, N), l.createElement(r, {\n      \"aria-label\": p\n    }, l.createElement(o, Object.assign({\n      className: a(i.Tabs, f),\n      \"data-indicator-position\": h,\n      ref: c\n    }, x), l.Children.map(d, (e, a) => m(e) ? l.cloneElement(e, {\n      \"data-spacing\": y,\n      key: a,\n      value: `${a}`\n    }) : null))), I.map((e, a) => l.createElement(n, {\n      key: a,\n      value: `${a}`\n    }, e.children)));\n  }),\n  d = l.forwardRef((t, r) => {\n    var {\n        className: n,\n        title: o\n      } = t,\n      m = e(t, [\"className\", \"title\"]);\n    return l.createElement(c, Object.assign({\n      as: s,\n      className: a(i.TabItems, n),\n      ref: r\n    }, m), o);\n  });\np.displayName = \"Tabs\", d.displayName = \"TabItem\";\nexport { d as TabItem, p as Tabs };","map":null,"metadata":{},"sourceType":"module"}