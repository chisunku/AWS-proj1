{"ast":null,"code":"import React, { useContext, useEffect, useMemo } from 'react';\nimport { useInterpret } from '@xstate/react';\nimport { createAuthenticatorMachine, listenToAuthHub } from '@aws-amplify/ui';\nimport { AuthenticatorContext } from './AuthenticatorContext';\nexport default function AuthenticatorProvider(_ref) {\n  let {\n    children\n  } = _ref;\n  /**\n   * Based on use cases, developer might already have added another Provider\n   * outside Authenticator. In that case, we sync the two providers by just\n   * passing the parent value.\n   *\n   * TODO(BREAKING): enforce only one provider in App tree\n   */\n  const parentProviderVal = useContext(AuthenticatorContext);\n  const service = useInterpret(createAuthenticatorMachine);\n  const value = useMemo(() => !parentProviderVal ? {\n    service\n  } : parentProviderVal, [parentProviderVal, service]);\n  const {\n    service: activeService\n  } = value;\n  useEffect(() => {\n    const unsubscribe = listenToAuthHub(activeService);\n    return unsubscribe;\n  }, [activeService]);\n  return React.createElement(AuthenticatorContext.Provider, {\n    value: value\n  }, children);\n}","map":null,"metadata":{},"sourceType":"module"}