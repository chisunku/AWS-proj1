{"ast":null,"code":"import * as e from \"react\";\nimport { useRange as a, ELLIPSIS as t } from \"./useRange.js\";\nimport { PaginationItem as r } from \"./PaginationItem.js\";\nimport { ComponentText as i } from \"../shared/constants.js\";\nconst n = function (n, s, o, l) {\n  let m = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : i.PaginationItem.currentPageLabel;\n  let p = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : i.PaginationItem.pageLabel;\n  let c = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : i.PaginationItem.previousLabel;\n  let g = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : i.PaginationItem.nextLabel;\n  let u = arguments.length > 8 ? arguments[8] : undefined;\n  let b = arguments.length > 9 ? arguments[9] : undefined;\n  let P = arguments.length > 10 ? arguments[10] : undefined;\n  const y = e.createElement(r, {\n      type: \"previous\",\n      key: \"previous\",\n      currentPage: n,\n      onClick: b,\n      isDisabled: n <= 1,\n      ariaLabel: c\n    }),\n    L = e.createElement(r, {\n      type: \"next\",\n      key: \"next\",\n      currentPage: n,\n      onClick: u,\n      isDisabled: n >= s && !o,\n      ariaLabel: g\n    }),\n    k = a(n, s, l);\n  return [y, ...e.useMemo(() => k.map((a, i) => a === t ? e.createElement(r, {\n    type: \"ellipsis\",\n    key: 1 === i ? \"start-ellipsis\" : \"end-ellipsis\"\n  }) : e.createElement(r, {\n    key: a,\n    type: \"page\",\n    page: a,\n    currentPage: n,\n    currentPageLabel: m,\n    onClick: P,\n    ariaLabel: `${p} ${a}`\n  })), [k, n, m, p, P]), L];\n};\nexport { n as usePaginationItems };","map":null,"metadata":{},"sourceType":"module"}