{"ast":null,"code":"import { ComponentClassName as e } from \"./types.js\";\nconst a = {\n    Alert: {\n      className: e.Alert,\n      components: [\"Alert\"],\n      description: \"Top level element that wraps the Alert primitive\"\n    },\n    AlertIcon: {\n      className: e.AlertIcon,\n      components: [\"Alert\"],\n      description: \"Class applied to Icon component within the Alert primitive\"\n    },\n    AlertHeading: {\n      className: e.AlertHeading,\n      components: [\"Alert\"],\n      description: \"Class applied to the heading View\"\n    },\n    AlertBody: {\n      className: e.AlertBody,\n      components: [\"Alert\"],\n      description: \"Class applied to the body View\"\n    },\n    AlertDismiss: {\n      className: e.AlertDismiss,\n      components: [\"Alert\"],\n      description: \"Class applied to the close Button\"\n    },\n    Badge: {\n      className: e.Badge,\n      components: [\"Badge\"],\n      description: \"Top level element that wraps the Badge component\"\n    },\n    Button: {\n      className: e.Button,\n      components: [\"Button\"],\n      description: \"Top level element that wraps the Button primitive\"\n    },\n    ButtonGroup: {\n      className: e.ButtonGroup\n    },\n    ButtonLoaderWrapper: {\n      className: e.ButtonLoaderWrapper,\n      components: [\"Button\"],\n      description: \"Class applied to the Loader component within the Button Loading state\"\n    },\n    Card: {\n      className: e.Card,\n      components: [\"Card\"],\n      description: \"Top level element that wraps the Card primitive\"\n    },\n    Checkbox: {\n      className: e.Checkbox,\n      components: [\"Checkbox\"],\n      description: \"Top level element that wraps the Checkbox primitive\"\n    },\n    CheckboxButton: {\n      className: e.CheckboxButton,\n      components: [\"Checkbox\"],\n      description: \"Wrapper for the checked icon within the Checkbox primitive\"\n    },\n    CheckboxIcon: {\n      className: e.CheckboxIcon,\n      components: [\"Checkbox\"],\n      description: \"Class applied to the checked icon within the Checkbox primitive\"\n    },\n    CheckboxInput: {\n      className: e.CheckboxInput,\n      components: [\"Checkbox\"],\n      description: \"Class applied to the visually hidden checkbox input within the Checkbox primitive\"\n    },\n    CheckboxLabel: {\n      className: e.CheckboxLabel,\n      components: [\"Checkbox\"],\n      description: \"Class applied to the label within the Checkbox primitive\"\n    },\n    CheckboxField: {\n      className: e.CheckboxField,\n      components: [\"CheckboxField\"],\n      description: \"Top level element that wraps the CheckboxField primitive\"\n    },\n    Collection: {\n      className: e.Collection,\n      components: [\"Collection\"],\n      description: \"Top level element that wraps the Collection primitive\"\n    },\n    CollectionItems: {\n      className: e.CollectionItems,\n      components: [\"Collection\"],\n      description: \"Class applied to the element that wraps all the items in a collection\"\n    },\n    CollectionSearch: {\n      className: e.CollectionSearch,\n      components: [\"Collection\"],\n      description: \"Class applied to the element that wraps the collection search box\"\n    },\n    CollectionPagination: {\n      className: e.CollectionPagination,\n      components: [\"Collection\"],\n      description: \"Class applied to the element that wraps the pagination component in a collection\"\n    },\n    CountryCodeSelect: {\n      className: e.CountryCodeSelect,\n      components: [\"PhoneNumberField\"],\n      description: \"Class applied to the Dial Code Select within the PhoneNumberField primitive\"\n    },\n    DialCodeSelect: {\n      className: e.DialCodeSelect,\n      components: [\"PhoneNumberField\"],\n      description: \"Class applied to the Dial Code Select within the PhoneNumberField primitive\"\n    },\n    Divider: {\n      className: e.Divider,\n      components: [\"Divider\"],\n      description: \"Top level element that wraps the Divider primitive\"\n    },\n    DividerLabel: {\n      className: e.DividerLabel,\n      components: [\"Divider\"],\n      description: \"Class applied to the label of the Divider component\"\n    },\n    Expander: {\n      className: e.Expander,\n      components: [\"Expander\"],\n      description: \"Top level element that wraps the Expander primitive\"\n    },\n    ExpanderContent: {\n      className: e.ExpanderContent,\n      components: [\"Expander\"],\n      description: \"Expander content container\"\n    },\n    ExpanderContentText: {\n      className: e.ExpanderContentText,\n      components: [\"Expander\"],\n      description: \"Expander content text\"\n    },\n    ExpanderHeader: {\n      className: e.ExpanderHeader,\n      components: [\"Expander\"],\n      description: \"Expander item header\"\n    },\n    ExpanderIcon: {\n      className: e.ExpanderIcon,\n      components: [\"Expander\"],\n      description: \"Icon to indicate whether an item is expanded or collapsed\"\n    },\n    ExpanderItem: {\n      className: e.ExpanderItem,\n      components: [\"Expander\"],\n      description: \"Expander item(containier for header, trigger, and content)\"\n    },\n    ExpanderTrigger: {\n      className: e.ExpanderTrigger,\n      components: [\"Expander\"],\n      description: \"Expander item trigger(button)\"\n    },\n    Field: {\n      className: e.Field\n    },\n    FieldDescription: {\n      className: e.FieldDescription\n    },\n    FieldErrorMessage: {\n      className: e.FieldErrorMessage\n    },\n    FieldGroup: {\n      className: e.FieldGroup\n    },\n    FieldGroupControl: {\n      className: e.FieldGroupControl\n    },\n    FieldGroupOuterEnd: {\n      className: e.FieldGroupOuterEnd\n    },\n    FieldGroupOuterStart: {\n      className: e.FieldGroupOuterStart\n    },\n    FieldGroupInnerEnd: {\n      className: e.FieldGroupInnerEnd\n    },\n    FieldGroupInnerStart: {\n      className: e.FieldGroupInnerStart\n    },\n    FieldGroupIcon: {\n      className: e.FieldGroupIcon\n    },\n    FieldGroupIconButton: {\n      className: e.FieldGroupIconButton\n    },\n    FieldGroupHasInnerEnd: {\n      className: e.FieldGroupHasInnerEnd\n    },\n    FieldGroupHasInnerStart: {\n      className: e.FieldGroupHasInnerStart\n    },\n    FieldShowPassword: {\n      className: e.FieldShowPassword\n    },\n    FieldGroupFieldWrapper: {\n      className: e.FieldGroupFieldWrapper\n    },\n    Flex: {\n      className: e.Flex,\n      components: [\"Flex\"],\n      description: \"Top level element that wraps the Flex primitive\"\n    },\n    Grid: {\n      className: e.Grid,\n      components: [\"Grid\"],\n      description: \"Top level element that wraps the Grid primitive\"\n    },\n    Heading: {\n      className: e.Heading,\n      components: [\"Heading\"],\n      description: \"Top level element that wraps the Heading primitive\"\n    },\n    Icon: {\n      className: e.Icon,\n      components: [\"Icon\"],\n      description: \"Top level element that wraps the Icon primitive\"\n    },\n    Image: {\n      className: e.Image,\n      components: [\"Image\"],\n      description: \"Top level element that wraps the Image primitive\"\n    },\n    Input: {\n      className: e.Input\n    },\n    Label: {\n      className: e.Label\n    },\n    Link: {\n      className: e.Link,\n      components: [\"Link\"],\n      description: \"Top level element that wraps the Link primitive\"\n    },\n    Loader: {\n      className: e.Loader,\n      components: [\"Loader\"],\n      description: \"Top level element that wraps the Loader primitive\"\n    },\n    LoaderDeterminate: {\n      className: e.LoaderDeterminate,\n      components: [\"Loader\"],\n      description: \"Class applied to a determinate loader\"\n    },\n    LoaderPercentageText: {\n      className: e.LoaderPercentageText,\n      components: [\"Loader\"],\n      description: \"Class applied to the percentage text of loader\"\n    },\n    MenuContent: {\n      className: e.MenuContent,\n      components: [\"Menu\"],\n      description: \"Menu content container (Flex)\"\n    },\n    MenuItem: {\n      className: e.MenuItem,\n      components: [\"Menu\"],\n      description: \"Menu item button (MenuButton, wrapped in amplify-menu-content class)\"\n    },\n    MenuTrigger: {\n      className: e.MenuTrigger,\n      components: [\"Menu\"],\n      description: \"Menu trigger button (MenuButton, not wrapped in amplify-menu-content class)\"\n    },\n    Pagination: {\n      className: e.Pagination,\n      components: [\"Pagination\"],\n      description: \"Top level element that wraps the Pagination primitive\"\n    },\n    PaginationItemButton: {\n      className: e.PaginationItemButton,\n      components: [\"Pagination\"],\n      description: \"Class applied to the pagination buttons\"\n    },\n    PaginationItemCurrent: {\n      className: e.PaginationItemCurrent,\n      components: [\"Pagination\"],\n      description: \"Class applied to the currently selected pagination button\"\n    },\n    PaginationItemEllipsis: {\n      className: e.PaginationItemEllipsis,\n      components: [\"Pagination\"],\n      description: \"Class applied to the ellipsis within the Pagination primitive\"\n    },\n    PasswordField: {\n      className: e.PasswordField,\n      components: [\"PasswordField\"],\n      description: \"Top level element that wraps the PasswordField primitive\"\n    },\n    PhoneNumberField: {\n      className: e.PhoneNumberField,\n      components: [\"PhoneNumberField\"],\n      description: \"Top level element that wraps the PhoneNumberField primitive\"\n    },\n    Placeholder: {\n      className: e.Placeholder,\n      components: [\"Placeholder\"],\n      description: \"Top level element that wraps the Placeholder primitive\"\n    },\n    Radio: {\n      className: e.Radio,\n      components: [\"RadioGroupField\", \"Radio\"],\n      description: \"Top level element that wraps the Radio primitive\"\n    },\n    RadioButton: {\n      className: e.RadioButton,\n      components: [\"RadioGroupField\", \"Radio\"],\n      description: \"Class applied to the displayed radio button\"\n    },\n    RadioInput: {\n      className: e.RadioInput,\n      components: [\"RadioGroupField\", \"Radio\"],\n      description: \"Class applied to the visually hidden radio input\"\n    },\n    RadioLabel: {\n      className: e.RadioLabel,\n      components: [\"RadioGroupField\", \"Radio\"],\n      description: \"Class applied to the radio label\"\n    },\n    RadioGroupField: {\n      className: e.RadioGroupField,\n      components: [\"RadioGroupField\"],\n      description: \"Top level element that wraps the RadioGroupField primitive\"\n    },\n    RadioGroup: {\n      className: e.RadioGroup,\n      components: [\"RadioGroupField\"],\n      description: \"Class applied to the radio group wrapper\"\n    },\n    Rating: {\n      className: e.Rating,\n      components: [\"Rating\"],\n      description: \"Top level element that wraps the Rating primitive\"\n    },\n    ScrollView: {\n      className: e.ScrollView,\n      components: [\"ScrollView\"],\n      description: \"Top level element that wraps the ScrollView primitive\"\n    },\n    SearchField: {\n      className: e.SearchField,\n      components: [\"SearchField\"],\n      description: \"Top level element that wraps the SearchField primitive\"\n    },\n    SearchFieldClear: {\n      className: e.SearchFieldClear,\n      components: [\"SearchField\"],\n      description: \"Class applied to the search field clear button\"\n    },\n    SearchFieldSearch: {\n      className: e.SearchFieldSearch,\n      components: [\"SearchField\"],\n      description: \"Class applied to the search button\"\n    },\n    Select: {\n      className: e.Select,\n      components: [\"Select\", \"SelectField\"],\n      description: \"Class applied to the select element\"\n    },\n    SelectField: {\n      className: e.SelectField,\n      components: [\"SelectField\"],\n      description: \"Top level element that wraps the SelectField primitive\"\n    },\n    SelectWrapper: {\n      className: e.SelectWrapper,\n      components: [\"Select\", \"SelectField\"],\n      description: \"Class applied to the select wrapper\"\n    },\n    SelectIconWrapper: {\n      className: e.SelectIconWrapper,\n      components: [\"Select\", \"SelectField\"],\n      description: \"Class applied to the select icon wrapper\"\n    },\n    SliderField: {\n      className: e.SliderField,\n      components: [\"SliderField\"],\n      description: \"Top level element that wraps the SliderField primitive\"\n    },\n    SliderFieldGroup: {\n      className: e.SliderFieldGroup,\n      components: [\"SliderField\"],\n      description: \"Class applied to the element that wraps the slider root\"\n    },\n    SliderFieldLabel: {\n      className: e.SliderFieldLabel,\n      components: [\"SliderField\"],\n      description: \"Class applied to the slider label\"\n    },\n    SliderFieldRange: {\n      className: e.SliderFieldRange,\n      components: [\"SliderField\"],\n      description: \"Class applied to the filled in portion of the slider track\"\n    },\n    SliderFieldRoot: {\n      className: e.SliderFieldRoot,\n      components: [\"SliderField\"],\n      description: \"Class applied to the slider root which wraps the track and thumb\"\n    },\n    SliderFieldThumb: {\n      className: e.SliderFieldThumb,\n      components: [\"SliderField\"],\n      description: \"Class applied to the slider thumb\"\n    },\n    SliderFieldTrack: {\n      className: e.SliderFieldTrack,\n      components: [\"SliderField\"],\n      description: \"Class applied to the slider track\"\n    },\n    StepperField: {\n      className: e.StepperField,\n      components: [\"StepperField\"],\n      description: \"Top level element that wraps the StepperField primitive\"\n    },\n    StepperFieldButtonDecrease: {\n      className: e.StepperFieldButtonDecrease,\n      components: [\"StepperField\"],\n      description: \"Class applied to the decrease button\"\n    },\n    StepperFieldButtonIncrease: {\n      className: e.StepperFieldButtonIncrease,\n      components: [\"StepperField\"],\n      description: \"Class applied to the increase button\"\n    },\n    StepperFieldInput: {\n      className: e.StepperFieldInput,\n      components: [\"StepperField\"],\n      description: \"Class applied to the StepperField input\"\n    },\n    SwitchField: {\n      className: e.SwitchField,\n      components: [\"SwitchField\"],\n      description: \"Top level element that wraps the SwitchField primitive\"\n    },\n    SwitchLabel: {\n      className: e.SwitchLabel,\n      components: [\"SwitchField\"],\n      description: \"Class applied to the SwitchField label text\"\n    },\n    SwitchThumb: {\n      className: e.SwitchThumb,\n      components: [\"SwitchField\"],\n      description: \"Class applied to the SwitchField thumb\"\n    },\n    SwitchTrack: {\n      className: e.SwitchTrack,\n      components: [\"SwitchField\"],\n      description: \"Class applied to the SwitchField track\"\n    },\n    SwitchWrapper: {\n      className: e.SwitchWrapper,\n      components: [\"SwitchField\"],\n      description: \"Class applied to the label element that wraps the SwitchField label and track\"\n    },\n    Table: {\n      className: e.Table,\n      components: [\"Table\"],\n      description: \"Top level element that wraps the Table primitive\"\n    },\n    TableCaption: {\n      className: e.TableCaption,\n      components: [\"Table\"],\n      description: \"Class applied to the content provided as the caption prop\"\n    },\n    TableBody: {\n      className: e.TableBody,\n      components: [\"Table\"],\n      description: \"Class applied to TableBody component\"\n    },\n    TableTd: {\n      className: e.TableTd,\n      components: [\"Table\"],\n      description: 'Class applied to TableCell component rendered as a <td> element (<TableCell as=\"td\" />)'\n    },\n    TableTh: {\n      className: e.TableTh,\n      components: [\"Table\"],\n      description: 'Class applied to TableCell comopnent rendered as a <th> element (<TableCell as=\"th\" />)'\n    },\n    TableFoot: {\n      className: e.TableFoot,\n      components: [\"Table\"],\n      description: \"Class applied to TableFoot component\"\n    },\n    TableHead: {\n      className: e.TableHead,\n      components: [\"Table\"],\n      description: \"Class applied to TableHead component\"\n    },\n    TableRow: {\n      className: e.TableRow,\n      components: [\"Table\"],\n      description: \"Class applied to TableRow component\"\n    },\n    Tabs: {\n      className: e.Tabs,\n      components: [\"Tabs\"],\n      description: \"Top level element that wraps the Tabs primitive\"\n    },\n    TabItems: {\n      className: e.TabItems,\n      components: [\"Tabs\"],\n      description: \"Top level element that wraps the TabItem primitive\"\n    },\n    Text: {\n      className: e.Text,\n      components: [\"Text\"],\n      description: \"Top level element that wraps the Text primitive\"\n    },\n    Textarea: {\n      className: e.Textarea,\n      components: [\"TextAreaField\"],\n      description: \"Class applied to the text area\"\n    },\n    TextAreaField: {\n      className: e.TextAreaField,\n      components: [\"TextAreaField\"],\n      description: \"Top level element that wraps the TextAreaField primitive\"\n    },\n    TextField: {\n      className: e.TextField,\n      components: [\"TextField\"],\n      description: \"Top level element that wraps the TextField primitive\"\n    },\n    ToggleButton: {\n      className: e.ToggleButton,\n      components: [\"ToggleButton\"],\n      description: \"Top level element that wraps the ToggleButton primitive\"\n    },\n    ToggleButtonGroup: {\n      className: e.ToggleButtonGroup,\n      components: [\"ToggleButton\", \"ToggleButtonGroup\"],\n      description: \"Top level element that wraps the ToggleButtonGroup primitive\"\n    },\n    VisuallyHidden: {\n      className: e.VisuallyHidden,\n      components: [\"VisuallyHidden\"],\n      description: \"Top level element that wraps the VisuallyHidden primitive\"\n    }\n  },\n  t = {\n    Alert: a.Alert.className,\n    AlertIcon: a.AlertIcon.className,\n    AlertHeading: a.AlertHeading.className,\n    AlertBody: a.AlertBody.className,\n    AlertDismiss: a.AlertDismiss.className,\n    Badge: a.Badge.className,\n    Button: a.Button.className,\n    ButtonGroup: a.ButtonGroup.className,\n    ButtonLoaderWrapper: a.ButtonLoaderWrapper.className,\n    Card: a.Card.className,\n    Checkbox: a.Checkbox.className,\n    CheckboxButton: a.CheckboxButton.className,\n    CheckboxIcon: a.CheckboxIcon.className,\n    CheckboxInput: a.CheckboxInput.className,\n    CheckboxLabel: a.CheckboxLabel.className,\n    CheckboxField: a.CheckboxField.className,\n    Collection: a.Collection.className,\n    CollectionItems: a.CollectionItems.className,\n    CollectionSearch: a.CollectionSearch.className,\n    CollectionPagination: a.CollectionPagination.className,\n    CountryCodeSelect: a.CountryCodeSelect.className,\n    DialCodeSelect: a.DialCodeSelect.className,\n    Divider: a.Divider.className,\n    DividerLabel: a.DividerLabel.className,\n    Expander: a.Expander.className,\n    ExpanderContent: a.ExpanderContent.className,\n    ExpanderContentText: a.ExpanderContentText.className,\n    ExpanderHeader: a.ExpanderHeader.className,\n    ExpanderIcon: a.ExpanderIcon.className,\n    ExpanderItem: a.ExpanderItem.className,\n    ExpanderTrigger: a.ExpanderTrigger.className,\n    Field: a.Field.className,\n    FieldDescription: a.FieldDescription.className,\n    FieldErrorMessage: a.FieldErrorMessage.className,\n    FieldGroup: a.FieldGroup.className,\n    FieldGroupControl: a.FieldGroupControl.className,\n    FieldGroupOuterEnd: a.FieldGroupOuterEnd.className,\n    FieldGroupOuterStart: a.FieldGroupOuterStart.className,\n    FieldGroupInnerEnd: a.FieldGroupInnerEnd.className,\n    FieldGroupInnerStart: a.FieldGroupInnerStart.className,\n    FieldGroupIcon: a.FieldGroupIcon.className,\n    FieldGroupIconButton: a.FieldGroupIconButton.className,\n    FieldGroupHasInnerEnd: a.FieldGroupHasInnerEnd.className,\n    FieldGroupHasInnerStart: a.FieldGroupHasInnerStart.className,\n    FieldShowPassword: a.FieldShowPassword.className,\n    FieldGroupFieldWrapper: a.FieldGroupFieldWrapper.className,\n    Flex: a.Flex.className,\n    Grid: a.Grid.className,\n    Heading: a.Heading.className,\n    Icon: a.Icon.className,\n    Image: a.Image.className,\n    Input: a.Input.className,\n    Label: a.Label.className,\n    Link: a.Link.className,\n    Loader: a.Loader.className,\n    LoaderDeterminate: a.LoaderDeterminate.className,\n    LoaderPercentageText: a.LoaderPercentageText.className,\n    MenuContent: a.MenuContent.className,\n    MenuItem: a.MenuItem.className,\n    MenuTrigger: a.MenuTrigger.className,\n    Pagination: a.Pagination.className,\n    PaginationItemButton: a.PaginationItemButton.className,\n    PaginationItemCurrent: a.PaginationItemCurrent.className,\n    PaginationItemEllipsis: a.PaginationItemEllipsis.className,\n    PasswordField: a.PasswordField.className,\n    PhoneNumberField: a.PhoneNumberField.className,\n    Placeholder: a.Placeholder.className,\n    Radio: a.Radio.className,\n    RadioButton: a.RadioButton.className,\n    RadioInput: a.RadioInput.className,\n    RadioLabel: a.RadioLabel.className,\n    RadioGroupField: a.RadioGroupField.className,\n    RadioGroup: a.RadioGroup.className,\n    Rating: a.Rating.className,\n    ScrollView: a.ScrollView.className,\n    SearchField: a.SearchField.className,\n    SearchFieldClear: a.SearchFieldClear.className,\n    SearchFieldSearch: a.SearchFieldSearch.className,\n    Select: a.Select.className,\n    SelectField: a.SelectField.className,\n    SelectWrapper: a.SelectWrapper.className,\n    SelectIconWrapper: a.SelectIconWrapper.className,\n    SliderField: a.SliderField.className,\n    SliderFieldGroup: a.SliderFieldGroup.className,\n    SliderFieldLabel: a.SliderFieldLabel.className,\n    SliderFieldRange: a.SliderFieldRange.className,\n    SliderFieldRoot: a.SliderFieldRoot.className,\n    SliderFieldThumb: a.SliderFieldThumb.className,\n    SliderFieldTrack: a.SliderFieldTrack.className,\n    StepperField: a.StepperField.className,\n    StepperFieldButtonDecrease: a.StepperFieldButtonDecrease.className,\n    StepperFieldButtonIncrease: a.StepperFieldButtonIncrease.className,\n    StepperFieldInput: a.StepperFieldInput.className,\n    SwitchField: a.SwitchField.className,\n    SwitchLabel: a.SwitchLabel.className,\n    SwitchThumb: a.SwitchThumb.className,\n    SwitchTrack: a.SwitchTrack.className,\n    SwitchWrapper: a.SwitchWrapper.className,\n    Table: a.Table.className,\n    TableCaption: a.TableCaption.className,\n    TableBody: a.TableBody.className,\n    TableTd: a.TableTd.className,\n    TableTh: a.TableTh.className,\n    TableFoot: a.TableFoot.className,\n    TableHead: a.TableHead.className,\n    TableRow: a.TableRow.className,\n    Tabs: a.Tabs.className,\n    TabItems: a.TabItems.className,\n    Text: a.Text.className,\n    Textarea: a.Textarea.className,\n    TextAreaField: a.TextAreaField.className,\n    TextField: a.TextField.className,\n    ToggleButton: a.ToggleButton.className,\n    ToggleButtonGroup: a.ToggleButtonGroup.className,\n    VisuallyHidden: a.VisuallyHidden.className\n  },\n  l = {\n    Alert: {\n      dismissButtonLabel: \"Dismiss alert\"\n    },\n    Collection: {\n      searchButtonLabel: \"Search\",\n      searchNoResultsFound: \"No results found\"\n    },\n    Fields: {\n      clearButtonLabel: \"Clear input\"\n    },\n    PaginationItem: {\n      currentPageLabel: \"Page\",\n      nextLabel: \"Go to next page\",\n      pageLabel: \"Go to page\",\n      previousLabel: \"Go to previous page\"\n    },\n    PhoneNumberField: {\n      countryCodeLabel: \"Country code\"\n    },\n    SearchField: {\n      searchButtonLabel: \"Search\"\n    },\n    PasswordField: {\n      passwordIsHidden: \"Password is hidden\",\n      passwordIsShown: \"Password is shown\",\n      showPassword: \"Show password\"\n    },\n    StepperField: {\n      increaseButtonLabel: \"Increase to\",\n      decreaseButtonLabel: \"Decrease to\"\n    }\n  },\n  i = {\n    backgroundColor: \"colors\",\n    color: \"colors\",\n    borderRadius: \"radii\",\n    fontSize: \"fontSizes\",\n    fontWeight: \"fontWeights\",\n    fontFamily: \"fonts\",\n    lineHeight: \"lineHeights\",\n    opacity: \"opacities\",\n    boxShadow: \"shadows\",\n    transform: \"transforms\",\n    left: \"space\",\n    right: \"space\",\n    top: \"space\",\n    bottom: \"space\",\n    height: \"space\",\n    width: \"space\",\n    letterSpacing: \"space\",\n    margin: \"space\",\n    marginBlock: \"space\",\n    marginBlockEnd: \"space\",\n    marginBlockStart: \"space\",\n    marginInline: \"space\",\n    marginInlineEnd: \"space\",\n    marginInlineStart: \"space\",\n    marginLeft: \"space\",\n    marginRight: \"space\",\n    marginTop: \"space\",\n    marginBottom: \"space\",\n    maxHeight: \"space\",\n    maxWidth: \"space\",\n    minHeight: \"space\",\n    minWidth: \"space\",\n    padding: \"space\",\n    paddingBlock: \"space\",\n    paddingBlockEnd: \"space\",\n    paddingBlockStart: \"space\",\n    paddingInline: \"space\",\n    paddingInlineEnd: \"space\",\n    paddingInlineStart: \"space\",\n    paddingLeft: \"space\",\n    paddingRight: \"space\",\n    paddingTop: \"space\",\n    paddingBottom: \"space\",\n    gap: \"space\",\n    columnGap: \"space\",\n    rowGap: \"space\"\n  };\nexport { t as ComponentClassNames, a as ComponentClassObject, l as ComponentText, i as stylePropsToThemeKeys };","map":null,"metadata":{},"sourceType":"module"}