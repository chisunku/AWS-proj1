{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as t from \"react\";\nimport a from \"classnames\";\nimport { classNameModifier as r } from \"../shared/utils.js\";\nimport { ComponentClassNames as i } from \"../shared/constants.js\";\nimport { View as l } from \"../View/View.js\";\nconst s = \"linear-empty\",\n  n = \"linear-filled\",\n  o = \"circular-empty\",\n  c = \"circular-filled\",\n  d = 8,\n  m = 42,\n  y = 84 * Math.PI,\n  p = t.forwardRef((s, n) => {\n    var {\n        className: o,\n        filledColor: c,\n        emptyColor: d,\n        size: m,\n        variation: p,\n        isDeterminate: f = !1,\n        isPercentageTextHidden: x = !1,\n        percentage: g = 0\n      } = s,\n      u = e(s, [\"className\", \"filledColor\", \"emptyColor\", \"size\", \"variation\", \"isDeterminate\", \"isPercentageTextHidden\", \"percentage\"]);\n    g = Math.min(g, 100);\n    const v = `${g = Math.max(g, 0)}%`,\n      h = a(i.Loader, r(i.Loader, m), r(i.Loader, p), f ? i.LoaderDeterminate : null, o),\n      E = t.createElement(\"g\", null, t.createElement(\"line\", {\n        x1: \"0\",\n        x2: \"100%\",\n        y1: \"50%\",\n        y2: \"50%\",\n        style: {\n          stroke: String(d)\n        },\n        \"data-testid\": \"linear-empty\"\n      }), t.createElement(\"line\", {\n        x1: \"0\",\n        x2: f ? v : \"100%\",\n        y1: \"50%\",\n        y2: \"50%\",\n        style: {\n          stroke: f && 0 === g ? \"none\" : c ? String(c) : void 0\n        },\n        \"data-testid\": \"linear-filled\"\n      }), f ? t.createElement(\"text\", {\n        \"aria-live\": \"polite\",\n        className: a(i.LoaderPercentageText, x ? i.VisuallyHidden : null),\n        x: `${-1 + g}%`,\n        y: \"200%\"\n      }, v) : null),\n      k = t.createElement(\"g\", null, t.createElement(\"circle\", {\n        cx: \"50%\",\n        cy: \"50%\",\n        r: \"42%\",\n        strokeWidth: \"8%\",\n        style: {\n          stroke: String(d)\n        },\n        \"data-testid\": \"circular-empty\"\n      }), t.createElement(\"circle\", {\n        cx: \"50%\",\n        cy: \"50%\",\n        r: \"42%\",\n        strokeWidth: \"8%\",\n        style: {\n          stroke: String(c),\n          strokeDasharray: f ? `${y}% ${y}%` : void 0,\n          strokeDashoffset: f ? y - y * g / 100 + \"%\" : void 0\n        },\n        \"data-testid\": \"circular-filled\"\n      }), f ? t.createElement(\"text\", {\n        \"aria-live\": \"polite\",\n        className: a(i.LoaderPercentageText, x ? i.VisuallyHidden : null),\n        x: \"130%\",\n        y: \"80%\"\n      }, v) : null);\n    return t.createElement(l, Object.assign({\n      as: \"svg\",\n      className: h,\n      \"data-size\": m,\n      \"data-variation\": p,\n      ref: n,\n      role: \"img\"\n    }, u), \"linear\" === p ? E : k);\n  });\np.displayName = \"Loader\";\nexport { o as CIRCULAR_EMPTY, c as CIRCULAR_FILLED, d as CIRCULAR_STROKE_WIDTH, y as CIRCUMFERENCE, s as LINEAR_EMPTY, n as LINEAR_FILLED, p as Loader, m as RADIUS };","map":null,"metadata":{},"sourceType":"module"}