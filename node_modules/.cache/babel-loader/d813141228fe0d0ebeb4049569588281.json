{"ast":null,"code":"var _jsxFileName = \"/Users/sunku/Downloads/DropBucket-CMPE281-master/src/components/UserPage.jsx\";\nimport React, { PureComponent } from 'react';\nimport { Button, Navbar, Table } from \"react-bootstrap\";\nimport { dataService } from '../services/dataService';\nimport FileUpload from './FileUpload';\nimport LogOut from './LogOut';\nimport LogInPage from './LogInPage';\nvar jwt = require('jsonwebtoken');\nclass UserPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    const sessionToken = sessionStorage.getItem(\"token\");\n    // JWT DECODE \n    // Store decoded jwt in session storage\n\n    this.state = {\n      userDataDynamo: [],\n      userData: undefined,\n      desc: \"\",\n      isAdmin: false\n    };\n    this.setDescription = this.setDescription.bind(this);\n    this.updateTable = this.updateTable.bind(this);\n  }\n  setDescription(d) {\n    this.setState({\n      desc: d\n    });\n  }\n  updateTable2(user) {\n    console.log(\"Called Update Table\");\n    dataService.getUserData(user).then(json => {\n      console.log(json);\n      if (Array.isArray(json)) {\n        console.log(\"yes it is\");\n        this.setState({\n          userDataDynamo: json\n        });\n      }\n    }).catch(reason => {\n      console.log(\"Failed to fetch data from server, reason is : \", reason);\n    });\n  }\n  updateTable() {\n    console.log(\"Called Update Table\");\n    dataService.getAdminData().then(json => {\n      console.log(json);\n      if (Array.isArray(json)) {\n        this.setState({\n          userDataDynamo: json\n        });\n      }\n    }).catch(reason => {\n      console.log(\"Failed to fetch data from server, reason is : \", reason);\n    });\n  }\n  componentDidMount() {\n    var token = sessionStorage.getItem(\"token\");\n    var decoded = jwt.decode(token);\n    // get the decoded payload and header\n    var decoded = jwt.decode(token, {\n      complete: true\n    });\n    console.log(decoded.header);\n    console.log(decoded.payload);\n    const userObj = decoded.payload;\n    this.setState({\n      userData: userObj\n    });\n    const isAdmin = userObj && userObj[\"cognito:groups\"] && userObj[\"cognito:groups\"].filter(g => g == \"admin\").length > 0;\n    this.setState({\n      isAdmin\n    });\n    setTimeout(() => {\n      console.log(\"UserEmailCheckBefore:\" + this.state.userData.email);\n      console.log(\"isAdmin:\" + this.state.isAdmin);\n      if (this.state.isAdmin) {\n        this.updateTable();\n      } else {\n        this.updateTable2(this.state.userData.email);\n      }\n    }, 500);\n    dataService.getUser();\n  }\n  onClickDownLoad(file) {\n    window.open(\"https://d3k2ba7dd5osnx.cloudfront.net/\" + file);\n  }\n  onClickDelete(fileName, id) {\n    dataService.deleteFile(fileName, id).then(json => {\n      console.log(json);\n      setTimeout(() => {\n        if (this.state.isAdmin) {\n          this.updateTable();\n        } else {\n          this.updateTable2(this.state.userData.email);\n        }\n      }, 300);\n    }).catch(reason => {\n      console.log(\"Failed to delete, reason is : \", reason);\n    });\n  }\n\n  // fetchListAgain\n\n  render() {\n    const {\n      isAdmin\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"DropBucket\"), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"Signed in as: \", this.state.userData && /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, this.state.userData.email), \"\\xA0\\xA0 User Type: \", isAdmin && /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 44\n      }\n    }, \" \\\"Administrator\\\" \"), !isAdmin && /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 45\n      }\n    }, \" \\\"User (Non Admin)\\\"\"))), this.state.userData && /*#__PURE__*/React.createElement(LogOut, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 45\n      }\n    }), !this.state.userData && /*#__PURE__*/React.createElement(LogInPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 46\n      }\n    })), this.state.userData && /*#__PURE__*/React.createElement(FileUpload, {\n      user: this.state.userData.email,\n      desc: this.state.desc,\n      refreshList: e => this.updateTable(),\n      refreshList2: e => this.updateTable2(e),\n      isAdmin: isAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }), this.state.userDataDynamo.map(el => /*#__PURE__*/React.createElement(\"div\", {\n      key: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"u\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 46\n      }\n    }, el.filename, \":\")))));\n  }\n}\nexport default UserPage;","map":{"version":3,"names":["React","PureComponent","Button","Navbar","Table","dataService","FileUpload","LogOut","LogInPage","jwt","require","UserPage","constructor","props","sessionToken","sessionStorage","getItem","state","userDataDynamo","userData","undefined","desc","isAdmin","setDescription","bind","updateTable","d","setState","updateTable2","user","console","log","getUserData","then","json","Array","isArray","catch","reason","getAdminData","componentDidMount","token","decoded","decode","complete","header","payload","userObj","filter","g","length","setTimeout","email","getUser","onClickDownLoad","file","window","open","onClickDelete","fileName","id","deleteFile","render","e","map","el","filename"],"sources":["/Users/sunku/Downloads/DropBucket-CMPE281-master/src/components/UserPage.jsx"],"sourcesContent":["import React, { PureComponent } from 'react'\nimport { Button, Navbar, Table } from \"react-bootstrap\";\nimport { dataService } from '../services/dataService';\nimport FileUpload from './FileUpload';\nimport LogOut from './LogOut';\nimport LogInPage from './LogInPage';\nvar jwt = require('jsonwebtoken');\n\n\nclass UserPage extends PureComponent {\n    constructor(props) {\n        super(props)\n\n        const sessionToken = sessionStorage.getItem(\"token\")\n        // JWT DECODE \n        // Store decoded jwt in session storage\n\n        this.state = {\n            userDataDynamo: [],\n            userData: undefined,\n            desc: \"\",\n            isAdmin: false\n        }\n        this.setDescription = this.setDescription.bind(this)\n        this.updateTable = this.updateTable.bind(this)\n    }\n\n    setDescription(d) {\n        this.setState({\n            desc: d\n        })\n    }\n\n    updateTable2(user) {\n        console.log(\"Called Update Table\");\n        dataService.getUserData(user)\n            .then(json => {\n                console.log(json);\n                if (Array.isArray(json)) {\n                    console.log(\"yes it is\");\n                    this.setState({\n                        userDataDynamo: json\n\n                    });\n\n                }\n            })\n            .catch(reason => {\n                console.log(\"Failed to fetch data from server, reason is : \", reason);\n            });\n    }\n    updateTable() {\n        console.log(\"Called Update Table\");\n        dataService.getAdminData()\n            .then(json => {\n                console.log(json);\n                if (Array.isArray(json)) {\n                    this.setState({\n                        userDataDynamo: json\n                    });\n                }\n            })\n            .catch(reason => {\n                console.log(\"Failed to fetch data from server, reason is : \", reason);\n            });\n    }\n    componentDidMount() {\n        \n        var token = sessionStorage.getItem(\"token\");\n        var decoded = jwt.decode(token);\n        // get the decoded payload and header\n        var decoded = jwt.decode(token, { complete: true });\n        console.log(decoded.header);\n        console.log(decoded.payload);\n        const userObj = decoded.payload;\n        this.setState({\n            userData: userObj\n        })\n        const isAdmin = userObj && userObj[\"cognito:groups\"] && userObj[\"cognito:groups\"].filter(g => g == \"admin\").length > 0;\n\n        this.setState({ isAdmin });\n        setTimeout(()=> {\n            console.log(\"UserEmailCheckBefore:\"+this.state.userData.email)\n            console.log(\"isAdmin:\"+this.state.isAdmin)\n            if (this.state.isAdmin){\n                this.updateTable()\n            } else {\n                this.updateTable2(this.state.userData.email);\n            }\n        }, 500);\n        \n      \n        dataService.getUser()\n    }\n    \n\n    onClickDownLoad(file) {\n        window.open(\"https://d3k2ba7dd5osnx.cloudfront.net/\" + file);\n    }\n\n    onClickDelete(fileName, id) {\n        dataService.deleteFile(fileName, id)\n            .then(json => {\n                console.log(json);\n                setTimeout(()=> {\n                if (this.state.isAdmin){\n                    this.updateTable()\n                } else {\n                    this.updateTable2(this.state.userData.email);\n                }\n            }, 300);\n                \n            })\n            .catch(reason => {\n                console.log(\"Failed to delete, reason is : \", reason);\n            });\n    }\n\n    // fetchListAgain\n\n\n\n\n    render() {\n\n        const { isAdmin } = this.state;\n\n        return (\n\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand>DropBucket</Navbar.Brand>\n                    <Navbar.Collapse className=\"justify-content-end\">\n                        <Navbar.Text>\n                            Signed in as: {this.state.userData &&\n                                <a href=\"#login\">{this.state.userData.email}</a>}\n                            &nbsp;&nbsp;\n                            User Type: {\n                                isAdmin && <a> \"Administrator\" </a>\n                            }\n                            {\n                                !isAdmin && <a> \"User (Non Admin)\"</a>\n                            }\n                        </Navbar.Text>\n                    </Navbar.Collapse>\n                    {this.state.userData && <LogOut></LogOut>}\n                    {!this.state.userData && <LogInPage></LogInPage>}\n                </Navbar>\n                {\n                    this.state.userData &&\n                    <FileUpload\n                        user={this.state.userData.email}\n                        desc={this.state.desc}\n                        refreshList={e => this.updateTable()}\n                        refreshList2={e => this.updateTable2(e)}\n                        isAdmin={isAdmin}\n                    >\n                    </FileUpload>\n                }\n\n\n\n\n                            {this.state.userDataDynamo.map(el => (\n                                        <div key={el.id}>\n                                          <u><p>{el.filename}:</p></u>\n                                          </div>\n                                      ))}\n\n\n\n\n\n            </div>\n\n        )\n    }\n}\n\nexport default UserPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}