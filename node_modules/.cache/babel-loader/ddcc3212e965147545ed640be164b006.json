{"ast":null,"code":"import { __rest as e, __awaiter as i } from \"tslib\";\nimport o, { forwardRef as t, useMemo as r, useState as l, useEffect as a } from \"react\";\nimport n from \"maplibre-gl\";\nimport { AmplifyMapLibreRequest as m } from \"maplibre-gl-js-amplify\";\nimport s from \"react-map-gl\";\nimport { Amplify as p, Auth as v } from \"aws-amplify\";\nconst c = t((t, c) => {\n  var d,\n    {\n      mapLib: u,\n      mapStyle: f,\n      style: g\n    } = t,\n    y = e(t, [\"mapLib\", \"mapStyle\", \"style\"]);\n  const b = p.configure(),\n    w = r(() => {\n      var e, i, o, t;\n      return null !== (t = null !== (i = null === (e = b.geo) || void 0 === e ? void 0 : e.amazon_location_service) && void 0 !== i ? i : null === (o = b.geo) || void 0 === o ? void 0 : o.AmazonLocationService) && void 0 !== t ? t : {};\n    }, [b]),\n    [h, L] = l(),\n    S = r(() => Object.assign({\n      height: \"100vh\",\n      position: \"relative\",\n      width: \"100vw\"\n    }, g), [g]);\n  return a(() => {\n    i(void 0, void 0, void 0, function* () {\n      const e = yield v.currentUserCredentials();\n      if (e) {\n        const {\n            region: i\n          } = w,\n          {\n            transformRequest: o\n          } = new m(e, i);\n        L(() => o);\n      }\n    });\n  }, [w]), h ? o.createElement(s, Object.assign({}, y, {\n    mapLib: null != u ? u : n,\n    mapStyle: null != f ? f : null === (d = w.maps) || void 0 === d ? void 0 : d.default,\n    ref: c,\n    style: S,\n    transformRequest: h\n  })) : null;\n});\nc.displayName = \"MapView\";\nexport { c as MapView };","map":null,"metadata":{},"sourceType":"module"}