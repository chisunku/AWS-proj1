{"ast":null,"code":"//import axios from \"axios\";\n//import * as AWS from 'aws-sdk/global';\n\nglobal.fetch = require('node-fetch');\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\nexport const dataService = {\n  getUserData,\n  getAdminData,\n  uploadFile,\n  deleteFile,\n  getUser\n};\nexport const apiConfig = {\n  endpointURL: \"http://127.0.0.1:8080\"\n};\nfunction getUserData(userName, all) {\n  console.log(\"user\" + userName);\n  console.log(\"all or none \" + all);\n  const requestOption = {\n    //    mode: 'no-cors'\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/user_data/${userName}/${all}`, requestOption).then(res => {\n    console.log(\"response : \", res);\n    return res.json();\n  });\n}\nfunction getAdminData() {\n  const requestOption = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/getAdminData`, requestOption).then(res => {\n    console.log(res);\n    return res.json();\n  });\n}\nfunction uploadFile(inputFile, userData, description) {\n  const formData = new FormData();\n  formData.append('file', inputFile);\n  formData.append('first_name', \"aa\");\n  formData.append('last_name', \"bb\");\n  formData.append('desc', description);\n  formData.append('email', userData);\n  console.log(\"type : \", inputFile.type);\n  console.log(`UserNAme: ${userData}, desc: ${description}`);\n  const requestOption = {\n    method: 'POST',\n    body: formData\n    //        headers: { \"Content-Type\": inputFile.type }\n  };\n\n  return fetch(`/upload`, requestOption).then(res => {\n    console.log(\"res \", res);\n    return res;\n  });\n}\nfunction deleteFile(fileName, id) {\n  console.log(fileName, \" \", id);\n  return fetch(`/delete_files/${id}/${fileName}`, {\n    method: 'DELETE'\n  });\n}\nfunction getUser() {\n  var poolData = {\n    UserPoolId: 'us-east-2_0064KOcCQ',\n    ClientId: '2ub6k6peilk5te5prhkq2cjm5k'\n  };\n  var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n  var cognitoUser = userPool.getCurrentUser();\n  console.log(\"cognito user\", cognitoUser);\n  if (cognitoUser != null) {\n    cognitoUser.getSession(function (err, session) {\n      if (err) {\n        alert(err.message || JSON.stringify(err));\n        return;\n      }\n      console.log('session validity: ' + session.isValid());\n\n      // NOTE: getSession must be called to authenticate user before calling getUserAttributes\n      cognitoUser.getUserAttributes(function (err, attributes) {\n        if (err) {\n          // Handle error\n          console.log(err);\n        } else {\n          // Do something with attributes\n          console.log(attributes);\n        }\n      });\n\n      /*             AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n                      IdentityPoolId: 'us-west-2_YBN0LoINM',\n                      Logins: {\n      \n                          'cognito-idp.us-west-2.amazonaws.com/us-west-2_YBN0LoINM': session\n                              .getIdToken()\n                              .getJwtToken(),\n                      },\n                  });\n       */\n      // Instantiate aws sdk service objects now that the credentials have been updated.\n      // example: var s3 = new AWS.S3();\n    });\n  }\n}","map":{"version":3,"names":["global","fetch","require","AmazonCognitoIdentity","dataService","getUserData","getAdminData","uploadFile","deleteFile","getUser","apiConfig","endpointURL","userName","all","console","log","requestOption","method","headers","then","res","json","inputFile","userData","description","formData","FormData","append","type","body","fileName","id","poolData","UserPoolId","ClientId","userPool","CognitoUserPool","cognitoUser","getCurrentUser","getSession","err","session","alert","message","JSON","stringify","isValid","getUserAttributes","attributes"],"sources":["/Users/sunku/Downloads/DropBucket-CMPE281-master/src/services/dataService.js"],"sourcesContent":["//import axios from \"axios\";\n//import * as AWS from 'aws-sdk/global';\n\nglobal.fetch = require('node-fetch');\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\n\nexport const dataService = {\n    getUserData,\n    getAdminData,\n    uploadFile,\n    deleteFile,\n    getUser,\n\n}\n\nexport const apiConfig = {\n    endpointURL: \"http://127.0.0.1:8080\"\n}\n\nfunction getUserData(userName,all) {\n    console.log(\"user\"+userName);\n    console.log(\"all or none \"+all);\n    const requestOption = {\n//    mode: 'no-cors'\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" },\n\n    }\n    return fetch(`/user_data/${userName}/${all}`, requestOption).then(res => {\n        console.log(\"response : \",res);\n        return res.json();\n    })\n}\n\nfunction getAdminData() {\n\n    const requestOption = {\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return fetch(`/getAdminData`, requestOption).then(res => {\n        console.log(res);\n        return res.json();\n    })\n}\n\nfunction uploadFile(inputFile, userData, description) {\n    const formData = new FormData();\n    formData.append('file', inputFile);\n    formData.append('first_name', \"aa\");\n    formData.append('last_name', \"bb\");\n    formData.append('desc', description);\n    formData.append('email', userData);\n    console.log(\"type : \",inputFile.type);\n    console.log(`UserNAme: ${userData}, desc: ${description}`);\n    const requestOption = {\n        method: 'POST',\n        body: formData,\n//        headers: { \"Content-Type\": inputFile.type }\n    }\n    return fetch(`/upload`, requestOption).then(res => {\n      console.log(\"res \", res);\n        return res;\n    })\n}\nfunction deleteFile(fileName,id) {\n    console.log(fileName,\" \",id);\n    return fetch(`/delete_files/${id}/${fileName}`, { method: 'DELETE' })\n}\n\n\nfunction getUser() {\n    var poolData = {\n        UserPoolId: 'us-east-2_0064KOcCQ',\n        ClientId: '2ub6k6peilk5te5prhkq2cjm5k',\n    };\n    var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n    var cognitoUser = userPool.getCurrentUser();\n\n    console.log(\"cognito user\", cognitoUser);\n    \n    if (cognitoUser != null) {\n        cognitoUser.getSession(function(err, session) {\n            if (err) {\n                alert(err.message || JSON.stringify(err));\n                return;\n            }\n            console.log('session validity: ' + session.isValid());\n    \n            // NOTE: getSession must be called to authenticate user before calling getUserAttributes\n            cognitoUser.getUserAttributes(function(err, attributes) {\n                if (err) {\n                    // Handle error\n                    console.log(err);\n                } else {\n                    // Do something with attributes\n                    console.log(attributes);\n                }\n            });\n\n/*             AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n                IdentityPoolId: 'us-west-2_YBN0LoINM',\n                Logins: {\n\n                    'cognito-idp.us-west-2.amazonaws.com/us-west-2_YBN0LoINM': session\n                        .getIdToken()\n                        .getJwtToken(),\n                },\n            });\n */\n            // Instantiate aws sdk service objects now that the credentials have been updated.\n            // example: var s3 = new AWS.S3();\n        });\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}