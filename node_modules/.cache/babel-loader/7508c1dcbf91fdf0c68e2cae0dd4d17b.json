{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as a from \"react\";\nimport i from \"classnames\";\nimport { classNameModifierByFlag as t, classNameModifier as o } from \"../shared/utils.js\";\nimport { ComponentClassNames as s } from \"../shared/constants.js\";\nimport { Flex as d } from \"../Flex/Flex.js\";\nimport { Input as r } from \"../Input/Input.js\";\nimport { Text as l } from \"../Text/Text.js\";\nimport { useRadioGroupContext as n } from \"../RadioGroupField/context.js\";\nconst m = (m, p) => {\n    var {\n        children: c,\n        className: h,\n        id: u,\n        isDisabled: b,\n        testId: f,\n        value: R,\n        labelPosition: g,\n        height: v,\n        width: j,\n        bottom: N,\n        left: x,\n        position: E,\n        padding: I,\n        right: y,\n        top: w\n      } = m,\n      D = e(m, [\"children\", \"className\", \"id\", \"isDisabled\", \"testId\", \"value\", \"labelPosition\", \"height\", \"width\", \"bottom\", \"left\", \"position\", \"padding\", \"right\", \"top\"]);\n    const {\n        currentValue: C,\n        defaultValue: F,\n        name: O,\n        hasError: P,\n        isGroupDisabled: V,\n        isRequired: k,\n        isReadOnly: q,\n        onChange: z,\n        size: B,\n        labelPosition: G\n      } = n(),\n      T = V || b || q && F !== R,\n      H = void 0 !== C ? R === C : void 0,\n      L = void 0 !== F ? R === F : void 0,\n      A = g || G;\n    return a.createElement(d, {\n      as: \"label\",\n      className: i(s.Radio, t(s.Radio, \"disabled\", T), h),\n      \"data-disabled\": T,\n      \"data-label-position\": A,\n      width: j,\n      bottom: N,\n      top: w,\n      right: y,\n      left: x,\n      position: E,\n      padding: I\n    }, c && a.createElement(l, {\n      as: \"span\",\n      className: s.RadioLabel,\n      \"data-disabled\": T\n    }, c), a.createElement(r, Object.assign({\n      checked: H,\n      className: i(s.VisuallyHidden, s.RadioInput),\n      defaultChecked: L,\n      hasError: P,\n      id: u,\n      isDisabled: T,\n      isReadOnly: q,\n      isRequired: k,\n      onChange: z,\n      ref: p,\n      type: \"radio\",\n      name: O,\n      value: R\n    }, D)), a.createElement(d, {\n      \"aria-hidden\": \"true\",\n      as: \"span\",\n      className: i(s.RadioButton, o(s.RadioButton, B)),\n      \"data-size\": B,\n      testId: f\n    }));\n  },\n  p = a.forwardRef(m);\np.displayName = \"Radio\";\nexport { p as Radio, m as RadioPrimitive };","map":null,"metadata":{},"sourceType":"module"}