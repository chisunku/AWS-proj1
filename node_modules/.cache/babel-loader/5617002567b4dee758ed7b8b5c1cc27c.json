{"ast":null,"code":"import { __assign as e } from \"tslib\";\nimport { getActorContext as t, getActorState as n } from \"./actor.js\";\nvar r = function (e) {\n    var t = function (t) {\n      return function (n) {\n        return e({\n          type: t,\n          data: n\n        });\n      };\n    };\n    return {\n      initializeMachine: t(\"INIT\"),\n      resendCode: t(\"RESEND\"),\n      signOut: t(\"SIGN_OUT\"),\n      submitForm: t(\"SUBMIT\"),\n      updateForm: t(\"CHANGE\"),\n      updateBlur: t(\"BLUR\"),\n      toFederatedSignIn: t(\"FEDERATED_SIGN_IN\"),\n      toResetPassword: t(\"RESET_PASSWORD\"),\n      toSignIn: t(\"SIGN_IN\"),\n      toSignUp: t(\"SIGN_UP\"),\n      skipVerification: t(\"SKIP\")\n    };\n  },\n  i = function (e) {\n    var r,\n      i,\n      s,\n      a,\n      o,\n      u = null !== (r = t(e)) && void 0 !== r ? r : {},\n      c = u.codeDeliveryDetails,\n      d = u.remoteError,\n      l = u.unverifiedContactMethods,\n      v = u.validationError,\n      f = (null !== (s = null === (i = e.context) || void 0 === i ? void 0 : i.config) && void 0 !== s ? s : {}).socialProviders,\n      m = null !== (a = null == u ? void 0 : u.user) && void 0 !== a ? a : null === (o = e.context) || void 0 === o ? void 0 : o.user,\n      h = v && Object.keys(v).length > 0,\n      g = n(e),\n      S = e.hasTag(\"pending\") || (null == g ? void 0 : g.hasTag(\"pending\")),\n      p = function () {\n        switch (!0) {\n          case e.matches(\"idle\"):\n            return \"idle\";\n          case e.matches(\"setup\"):\n            return \"setup\";\n          case e.matches(\"signOut\"):\n            return \"signOut\";\n          case e.matches(\"authenticated\"):\n            return \"authenticated\";\n          case null == g ? void 0 : g.matches(\"autoSignIn\"):\n            return \"autoSignIn\";\n          case null == g ? void 0 : g.matches(\"confirmSignUp\"):\n            return \"confirmSignUp\";\n          case null == g ? void 0 : g.matches(\"confirmSignIn\"):\n            return \"confirmSignIn\";\n          case null == g ? void 0 : g.matches(\"setupTOTP\"):\n            return \"setupTOTP\";\n          case null == g ? void 0 : g.matches(\"signIn\"):\n            return \"signIn\";\n          case null == g ? void 0 : g.matches(\"signUp\"):\n            return \"signUp\";\n          case null == g ? void 0 : g.matches(\"forceNewPassword\"):\n            return \"forceNewPassword\";\n          case null == g ? void 0 : g.matches(\"resetPassword\"):\n            return \"resetPassword\";\n          case null == g ? void 0 : g.matches(\"confirmResetPassword\"):\n            return \"confirmResetPassword\";\n          case null == g ? void 0 : g.matches(\"verifyUser\"):\n            return \"verifyUser\";\n          case null == g ? void 0 : g.matches(\"confirmVerifyUser\"):\n            return \"confirmVerifyUser\";\n          default:\n            return console.debug(\"Cannot infer `route` from Authenticator state:\", e.value), null;\n        }\n      }(),\n      I = function (e) {\n        switch (e) {\n          case \"idle\":\n          case \"setup\":\n            return \"configuring\";\n          case \"authenticated\":\n            return \"authenticated\";\n          default:\n            return \"unauthenticated\";\n        }\n      }(p);\n    return {\n      authStatus: I,\n      codeDeliveryDetails: c,\n      error: d,\n      hasValidationErrors: h,\n      isPending: S,\n      route: p,\n      socialProviders: f,\n      unverifiedContactMethods: l,\n      user: m,\n      validationErrors: v\n    };\n  },\n  s = function (t) {\n    var n = t.send,\n      s = t.state,\n      a = r(n),\n      o = i(s);\n    return e(e({}, a), o);\n  };\nexport { r as getSendEventAliases, i as getServiceContextFacade, s as getServiceFacade };","map":null,"metadata":{},"sourceType":"module"}