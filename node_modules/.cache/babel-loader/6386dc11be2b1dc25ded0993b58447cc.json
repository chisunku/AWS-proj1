{"ast":null,"code":"import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport { CircleMode, SimpleSelectMode, DirectMode } from \"maplibre-gl-draw-circle\";\nimport { getPolygonFeatureFromBounds, getCircleFeatureFromCoords } from \"../geofenceUtils\";\nimport { GEOFENCE_BORDER_COLOR, GEOFENCE_COLOR, GEOFENCE_VERTEX_COLOR } from \"../constants\";\nexport class AmplifyMapDraw {\n  constructor(map, ui) {\n    this._mapBoxDraw = new MapboxDraw({\n      displayControlsDefault: false,\n      defaultMode: \"simple_select\",\n      userProperties: true,\n      controls: {\n        trash: true\n      },\n      modes: Object.assign(Object.assign({}, MapboxDraw.modes), {\n        draw_circle: CircleMode,\n        direct_select: DirectMode,\n        simple_select: SimpleSelectMode\n      }),\n      styles: [\n      // ACTIVE (being drawn)\n      // polygon fill\n      {\n        id: \"gl-draw-polygon-fill\",\n        type: \"fill\",\n        filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n        paint: {\n          \"fill-color\": GEOFENCE_COLOR,\n          \"fill-outline-color\": GEOFENCE_COLOR,\n          \"fill-opacity\": 0.3\n        }\n      },\n      // polygon mid points\n      {\n        id: \"gl-draw-polygon-midpoint\",\n        type: \"circle\",\n        filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n        paint: {\n          \"circle-radius\": 5,\n          \"circle-color\": GEOFENCE_VERTEX_COLOR\n        }\n      },\n      // polygon border\n      {\n        id: \"gl-draw-polygon-stroke-active\",\n        type: \"line\",\n        filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n        layout: {\n          \"line-cap\": \"round\",\n          \"line-join\": \"round\"\n        },\n        paint: {\n          \"line-color\": GEOFENCE_BORDER_COLOR,\n          \"line-width\": 4\n        }\n      },\n      // vertex circle\n      {\n        id: \"gl-draw-polygon-and-line-vertex-active\",\n        type: \"circle\",\n        filter: [\"all\", [\"==\", \"meta\", \"vertex\"], [\"==\", \"$type\", \"Point\"], [\"!=\", \"mode\", \"static\"]],\n        paint: {\n          \"circle-radius\": 8,\n          \"circle-color\": GEOFENCE_VERTEX_COLOR,\n          \"circle-stroke-color\": GEOFENCE_BORDER_COLOR,\n          \"circle-stroke-width\": 1\n        }\n      }]\n    });\n    this._map = map;\n    this._ui = ui;\n    this.enable = this.enable.bind(this);\n    this.disable = this.disable.bind(this);\n    this.drawPolygonGeofence = this.drawPolygonGeofence.bind(this);\n  }\n  get(id) {\n    return this._mapBoxDraw.get(id);\n  }\n  add(data) {\n    const isCircle = data.properties.isCircle;\n    this.enable(isCircle);\n    this._mapBoxDraw.add(data);\n    this._mapBoxDraw.changeMode(\"direct_select\", {\n      featureId: data.id\n    });\n  }\n  delete(id) {\n    this._mapBoxDraw.delete(id);\n  }\n  disable() {\n    if (this._map.hasControl(this._mapBoxDraw)) {\n      this._map.removeControl(this._mapBoxDraw);\n    }\n    this._ui.removeGeofenceCreateContainer();\n  }\n  enable(isCircle) {\n    if (this._map.hasControl(this._mapBoxDraw)) {\n      return;\n    }\n    this._map.addControl(this._mapBoxDraw, \"bottom-right\");\n    this._ui.createGeofenceCreateContainer(isCircle);\n  }\n  /**\n   * Draws a polygonal geofence around the center of the current map view. The polygon defaults to 3/4 the size of the current map bounds\n   * @param id the geofence geojson id\n   */\n  drawPolygonGeofence(id) {\n    const mapBounds = this._map.getBounds();\n    const feature = getPolygonFeatureFromBounds(id, mapBounds);\n    this.add(feature);\n  }\n  /**\n   * Draws a cicular geofence around the center of the current map view\n   * @param id the geofence geojson id\n   * @param radius optional parameter for setting the radius of the cicular geofence, default to 1/8th of the current map bounds length\n   */\n  drawCircularGeofence(id, radius) {\n    const mapBounds = this._map.getBounds();\n    const circleFeature = getCircleFeatureFromCoords(id, this._map.getCenter().toArray(), {\n      bounds: mapBounds,\n      radius\n    });\n    this.add(circleFeature);\n    this._ui.updateGeofenceRadius(radius || circleFeature.properties.radius.toFixed(2));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}