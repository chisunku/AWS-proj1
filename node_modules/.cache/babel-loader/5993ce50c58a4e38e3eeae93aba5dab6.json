{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as r from \"react\";\nimport t from \"classnames\";\nimport { classNameModifier as n } from \"../shared/utils.js\";\nimport { ComponentClassNames as o } from \"../shared/constants.js\";\nimport { Flex as a } from \"../Flex/Flex.js\";\nimport { View as i } from \"../View/View.js\";\nconst l = r.forwardRef((l, m) => {\n  var {\n      children: s,\n      className: p,\n      innerEndComponent: d,\n      innerStartComponent: u,\n      orientation: c = \"horizontal\",\n      outerEndComponent: F,\n      outerStartComponent: E,\n      variation: G\n    } = l,\n    f = e(l, [\"children\", \"className\", \"innerEndComponent\", \"innerStartComponent\", \"orientation\", \"outerEndComponent\", \"outerStartComponent\", \"variation\"]);\n  const N = null != d,\n    C = null != u ? o.FieldGroupHasInnerStart : null,\n    S = N ? o.FieldGroupHasInnerEnd : null,\n    h = t(o.FieldGroup, C, S, n(o.FieldGroup, c), p);\n  return r.createElement(a, Object.assign({\n    className: h,\n    \"data-orientation\": c,\n    ref: m\n  }, f), E && r.createElement(i, {\n    className: t(o.FieldGroupOuterStart, n(o.FieldGroupOuterStart, G))\n  }, E), r.createElement(i, {\n    className: t(o.FieldGroupFieldWrapper, n(o.FieldGroupFieldWrapper, c)),\n    \"data-orientation\": c\n  }, u && r.createElement(i, {\n    className: o.FieldGroupInnerStart\n  }, u), s, d && r.createElement(i, {\n    className: o.FieldGroupInnerEnd\n  }, d)), F && r.createElement(i, {\n    className: t(o.FieldGroupOuterEnd, n(o.FieldGroupOuterEnd, G))\n  }, F));\n});\nl.displayName = \"FieldGroup\";\nexport { l as FieldGroup };","map":null,"metadata":{},"sourceType":"module"}