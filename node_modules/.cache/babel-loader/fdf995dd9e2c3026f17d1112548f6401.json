{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as o from \"react\";\nimport t from \"classnames\";\nimport { classNameModifier as i } from \"../shared/utils.js\";\nimport { ComponentClassNames as l } from \"../shared/constants.js\";\nimport { Flex as r } from \"../Flex/Flex.js\";\nimport \"../View/View.js\";\nimport { IconStar as a } from \"../Icon/icons/IconStar.js\";\nimport { isIconFilled as m, isIconEmpty as n, isIconMixed as s } from \"./utils.js\";\nimport { RatingIcon as c } from \"./RatingIcon.js\";\nimport { RatingMixedIcon as f } from \"./RatingMixedIcon.js\";\nimport { VisuallyHidden as p } from \"../VisuallyHidden/VisuallyHidden.js\";\nconst y = 5,\n  u = 0,\n  d = o.forwardRef((d, g) => {\n    var {\n        className: j,\n        emptyColor: I,\n        emptyIcon: x,\n        fillColor: C,\n        icon: E = o.createElement(a, null),\n        maxValue: N = y,\n        size: R,\n        value: V = u\n      } = d,\n      v = e(d, [\"className\", \"emptyColor\", \"emptyIcon\", \"fillColor\", \"icon\", \"maxValue\", \"size\", \"value\"]);\n    const w = new Array(Math.ceil(N)).fill(1).map((e, t) => {\n      const i = t + 1;\n      return m(i, V) ? o.createElement(c, {\n        key: t.toString(),\n        icon: E,\n        fill: C,\n        className: \"amplify-rating-icon-filled\"\n      }) : n(i, V) ? o.createElement(c, {\n        key: t.toString(),\n        icon: x || E,\n        fill: I,\n        className: \"amplify-rating-icon-empty\"\n      }) : s(i, V) ? o.createElement(f, {\n        key: t.toString(),\n        fillIcon: E,\n        emptyIcon: x || E,\n        value: V,\n        fillColor: C,\n        emptyColor: I\n      }) : void 0;\n    });\n    return o.createElement(r, Object.assign({\n      className: t(l.Rating, i(l.Rating, R), j),\n      \"data-size\": R,\n      ref: g\n    }, v), w, o.createElement(p, null, V, \" out of \", N, \" rating\"));\n  });\nd.displayName = \"Rating\";\nexport { d as Rating };","map":null,"metadata":{},"sourceType":"module"}