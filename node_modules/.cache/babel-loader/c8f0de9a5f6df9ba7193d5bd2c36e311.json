{"ast":null,"code":"global.fetch = require('node-fetch');\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\nexport const dataService = {\n  get_user_data,\n  upload_file,\n  delete_file,\n  get_user\n};\nexport const apiConfig = {\n  endpointURL: \"http://127.0.0.1:8080\"\n};\nfunction get_user_data(user_name, all) {\n  const requestOption = {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(`/user_data/${user_name}/${all}`, requestOption).then(res => {\n    return res.json();\n  });\n}\nfunction upload_file(input_file, user_data, description) {\n  const formData = new FormData();\n  formData.append('file', input_file);\n  formData.append('first_name', user_data);\n  formData.append('last_name', user_data);\n  formData.append('desc', description);\n  formData.append('email', user_data);\n  const requestOption = {\n    method: 'POST',\n    body: formData\n  };\n  return fetch(`/upload`, requestOption).then(res => {\n    return res;\n  });\n}\nfunction delete_file(file_name, id) {\n  return fetch(`/delete_files/${id}/${file_name}`, {\n    method: 'DELETE'\n  });\n}\nfunction get_user() {\n  var pool_data = {\n    UserPoolId: 'us-east-2_0064KOcCQ',\n    ClientId: '2ub6k6peilk5te5prhkq2cjm5k'\n  };\n  var user_pool = new AmazonCognitoIdentity.CognitoUserPool(pool_data);\n  var cognito_user = user_pool.getCurrentUser();\n  if (cognito_user != null) {\n    cognito_user.getSession(function (e, session) {\n      if (e) {\n        alert(e.message || JSON.stringify(e));\n        return;\n      }\n      cognito_user.getUserAttributes(function (err, attributes) {\n        if (e) {\n          console.log(e);\n        } else {\n          console.log(attributes);\n        }\n      });\n    });\n  }\n}","map":{"version":3,"names":["global","fetch","require","AmazonCognitoIdentity","dataService","get_user_data","upload_file","delete_file","get_user","apiConfig","endpointURL","user_name","all","requestOption","method","headers","then","res","json","input_file","user_data","description","formData","FormData","append","body","file_name","id","pool_data","UserPoolId","ClientId","user_pool","CognitoUserPool","cognito_user","getCurrentUser","getSession","e","session","alert","message","JSON","stringify","getUserAttributes","err","attributes","console","log"],"sources":["/Users/sunku/Downloads/DropBucket-CMPE281-master/src/services/dataService.js"],"sourcesContent":["global.fetch = require('node-fetch');\nvar AmazonCognitoIdentity = require('amazon-cognito-identity-js');\n\nexport const dataService = {\n    get_user_data,\n    upload_file,\n    delete_file,\n    get_user\n}\n\nexport const apiConfig = {\n    endpointURL: \"http://127.0.0.1:8080\"\n}\n\nfunction get_user_data(user_name,all) {\n    const requestOption = {\n        method: 'GET',\n        headers: { \"Content-Type\": \"application/json\" },\n    }\n    return fetch(`/user_data/${user_name}/${all}`, requestOption).then(res => {\n        return res.json();\n    })\n}\n\nfunction upload_file(input_file, user_data, description) {\n    const formData = new FormData();\n    formData.append('file', input_file);\n    formData.append('first_name', user_data);\n    formData.append('last_name', user_data);\n    formData.append('desc', description);\n    formData.append('email', user_data);\n    const requestOption = {\n        method: 'POST',\n        body: formData\n    }\n    return fetch(`/upload`, requestOption).then(res => {\n        return res;\n    })\n}\nfunction delete_file(file_name,id) {\n    return fetch(`/delete_files/${id}/${file_name}`, { method: 'DELETE' })\n}\n\nfunction get_user() {\n    var pool_data = {\n        UserPoolId: 'us-east-2_0064KOcCQ',\n        ClientId: '2ub6k6peilk5te5prhkq2cjm5k',\n    };\n    var user_pool = new AmazonCognitoIdentity.CognitoUserPool(pool_data);\n    var cognito_user = user_pool.getCurrentUser();\n\n    if (cognito_user != null) {\n        cognito_user.getSession(function(e, session) {\n            if (e) {\n                alert(e.message || JSON.stringify(e));\n                return;\n            }\n            cognito_user.getUserAttributes(function(err, attributes) {\n                if (e) {\n                    console.log(e);\n                } else {\n                    console.log(attributes);\n                }\n            });\n        });\n    }\n}\n\n"],"mappings":"AAAAA,MAAM,CAACC,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAEjE,OAAO,MAAME,WAAW,GAAG;EACvBC,aAAa;EACbC,WAAW;EACXC,WAAW;EACXC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG;EACrBC,WAAW,EAAE;AACjB,CAAC;AAED,SAASL,aAAa,CAACM,SAAS,EAACC,GAAG,EAAE;EAClC,MAAMC,aAAa,GAAG;IAClBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAClD,CAAC;EACD,OAAOd,KAAK,CAAE,cAAaU,SAAU,IAAGC,GAAI,EAAC,EAAEC,aAAa,CAAC,CAACG,IAAI,CAACC,GAAG,IAAI;IACtE,OAAOA,GAAG,CAACC,IAAI,EAAE;EACrB,CAAC,CAAC;AACN;AAEA,SAASZ,WAAW,CAACa,UAAU,EAAEC,SAAS,EAAEC,WAAW,EAAE;EACrD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,UAAU,CAAC;EACnCG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEJ,SAAS,CAAC;EACxCE,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEJ,SAAS,CAAC;EACvCE,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,WAAW,CAAC;EACpCC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,SAAS,CAAC;EACnC,MAAMP,aAAa,GAAG;IAClBC,MAAM,EAAE,MAAM;IACdW,IAAI,EAAEH;EACV,CAAC;EACD,OAAOrB,KAAK,CAAE,SAAQ,EAAEY,aAAa,CAAC,CAACG,IAAI,CAACC,GAAG,IAAI;IAC/C,OAAOA,GAAG;EACd,CAAC,CAAC;AACN;AACA,SAASV,WAAW,CAACmB,SAAS,EAACC,EAAE,EAAE;EAC/B,OAAO1B,KAAK,CAAE,iBAAgB0B,EAAG,IAAGD,SAAU,EAAC,EAAE;IAAEZ,MAAM,EAAE;EAAS,CAAC,CAAC;AAC1E;AAEA,SAASN,QAAQ,GAAG;EAChB,IAAIoB,SAAS,GAAG;IACZC,UAAU,EAAE,qBAAqB;IACjCC,QAAQ,EAAE;EACd,CAAC;EACD,IAAIC,SAAS,GAAG,IAAI5B,qBAAqB,CAAC6B,eAAe,CAACJ,SAAS,CAAC;EACpE,IAAIK,YAAY,GAAGF,SAAS,CAACG,cAAc,EAAE;EAE7C,IAAID,YAAY,IAAI,IAAI,EAAE;IACtBA,YAAY,CAACE,UAAU,CAAC,UAASC,CAAC,EAAEC,OAAO,EAAE;MACzC,IAAID,CAAC,EAAE;QACHE,KAAK,CAACF,CAAC,CAACG,OAAO,IAAIC,IAAI,CAACC,SAAS,CAACL,CAAC,CAAC,CAAC;QACrC;MACJ;MACAH,YAAY,CAACS,iBAAiB,CAAC,UAASC,GAAG,EAAEC,UAAU,EAAE;QACrD,IAAIR,CAAC,EAAE;UACHS,OAAO,CAACC,GAAG,CAACV,CAAC,CAAC;QAClB,CAAC,MAAM;UACHS,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;QAC3B;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module"}