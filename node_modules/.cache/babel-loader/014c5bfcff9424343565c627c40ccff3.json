{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Auth } from 'aws-amplify';\nimport { getSortedFormFields } from '@aws-amplify/ui';\nimport { areEmptyArrays, areEmptyObjects } from '../../../utils';\nimport { COMPONENT_ROUTE_KEYS } from './constants';\nexport const defaultComparator = () => false;\n/**\n * Does an ordering and shallow comparison of each array value,\n * plus a value equality check for empty objects and arrays.\n */\nexport function areSelectorDepsEqual(currentDeps, nextDeps) {\n  if (currentDeps.length !== nextDeps.length) {\n    return false;\n  }\n  return currentDeps.every((currentDep, index) => {\n    const nextDep = nextDeps[index];\n    if (areEmptyArrays(currentDep, nextDep) || areEmptyObjects(currentDep, nextDep)) {\n      return true;\n    }\n    return currentDep === nextDep;\n  });\n}\nexport const getComparator = selector => (currentFacade, nextFacade) => {\n  const currentSelectorDeps = selector(currentFacade);\n  const nextSelectorDeps = selector(nextFacade);\n  // Shallow compare the array values\n  return areSelectorDepsEqual(currentSelectorDeps, nextSelectorDeps);\n};\nexport const getTotpSecretCodeCallback = user => function getTotpSecretCode() {\n  return __awaiter(this, void 0, void 0, function* () {\n    return yield Auth.setupTOTP(user);\n  });\n};\nexport const isComponentRouteKey = route => COMPONENT_ROUTE_KEYS.some(componentRoute => componentRoute === route);\nconst flattenFormFields = fields => fields.flatMap(_ref => {\n  let [name, options] = _ref;\n  return Object.assign({\n    name\n  }, options);\n});\n/**\n * Retrieves legacy form field values from state machine for routes that have fields\n */\nexport const getLegacyFields = (route, state) => isComponentRouteKey(route) ? flattenFormFields(getSortedFormFields(route, state)) : [];","map":null,"metadata":{},"sourceType":"module"}