{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { Geo } from \"@aws-amplify/geo\";\nimport MaplibreGeocoder from \"@maplibre/maplibre-gl-geocoder\";\nimport maplibregl from \"maplibre-gl\";\nimport { createDefaultIcon } from \"./createDefaultIcon\";\nexport const AmplifyGeocoderAPI = {\n  forwardGeocode: config => __awaiter(void 0, void 0, void 0, function* () {\n    const features = [];\n    try {\n      const data = yield Geo.searchByText(config.query, {\n        biasPosition: config.bbox ? undefined : config.proximity,\n        searchAreaConstraints: config.bbox,\n        countries: config.countries,\n        maxResults: config.limit\n      });\n      if (data) {\n        data.forEach(result => {\n          const {\n              geometry\n            } = result,\n            otherResults = __rest(result, [\"geometry\"]);\n          features.push({\n            type: \"Feature\",\n            geometry: {\n              type: \"Point\",\n              coordinates: geometry.point\n            },\n            properties: Object.assign({}, otherResults),\n            place_name: otherResults.label,\n            text: otherResults.label,\n            center: geometry.point\n          });\n        });\n      }\n    } catch (e) {\n      console.error(`Failed to forwardGeocode with error: ${e}`);\n    }\n    return {\n      features\n    };\n  }),\n  reverseGeocode: config => __awaiter(void 0, void 0, void 0, function* () {\n    const features = [];\n    try {\n      const data = yield Geo.searchByCoordinates(config.query, {\n        maxResults: config.limit\n      });\n      if (data && data.geometry) {\n        const {\n            geometry\n          } = data,\n          otherResults = __rest(data, [\"geometry\"]);\n        features.push({\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: geometry.point\n          },\n          properties: Object.assign({}, otherResults),\n          place_name: otherResults.label,\n          text: otherResults.label,\n          center: geometry.point\n        });\n      }\n    } catch (e) {\n      console.error(`Failed to reverseGeocode with error: ${e}`);\n    }\n    return {\n      features\n    };\n  })\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createAmplifyGeocoder(options) {\n  return new MaplibreGeocoder(AmplifyGeocoderAPI, Object.assign({\n    maplibregl: maplibregl,\n    showResultMarkers: {\n      element: createDefaultIcon()\n    },\n    marker: {\n      element: createDefaultIcon()\n    },\n    // autocomplete temporarily disabled by default until CLI is updated\n    showResultsWhileTyping: options === null || options === void 0 ? void 0 : options.autocomplete\n  }, options));\n}","map":null,"metadata":{},"sourceType":"module"}