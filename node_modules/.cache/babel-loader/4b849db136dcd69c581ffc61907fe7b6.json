{"ast":null,"code":"import { strHasLength } from \"./utils\";\nimport { COLOR_BLACK, COLOR_WHITE, POPUP_BORDER_COLOR } from \"./constants\";\nexport function getPopupRenderFunction(unclusteredLayerId, _ref) {\n  let {\n    popupBackgroundColor: background = COLOR_WHITE,\n    popupBorderColor: borderColor = POPUP_BORDER_COLOR,\n    popupBorderWidth: borderWidth = 2,\n    popupFontColor: fontColor = COLOR_BLACK,\n    popupPadding: padding = 20,\n    popupBorderRadius: radius = 4,\n    popupTitleFontWeight: fontWeight = \"bold\"\n  } = _ref;\n  return selectedFeature => {\n    let title, address;\n    // Try to get Title and address from existing feature properties\n    if (strHasLength(selectedFeature.properties.place_name)) {\n      const placeName = selectedFeature.properties.place_name.split(\",\");\n      title = placeName[0];\n      address = placeName.splice(1, placeName.length).join(\",\");\n    } else if (strHasLength(selectedFeature.properties.title) || strHasLength(selectedFeature.properties.address)) {\n      title = selectedFeature.properties.title;\n      address = selectedFeature.properties.address;\n    } else {\n      title = \"Coordinates\";\n      address = selectedFeature.geometry.coordinates;\n    }\n    const titleHtml = `<div class=\"${unclusteredLayerId}-popup-title\" style=\"font-weight: ${fontWeight};\">${title}</div>`;\n    const addressHtml = `<div class=\"${unclusteredLayerId}-popup-address\">${address}</div>`;\n    const popupHtmlStyle = `background: ${background}; border: ${borderWidth}px solid ${borderColor}; color: ${fontColor}; border-radius: ${radius}px; padding: ${padding}px; word-wrap: break-word; margin: -10px -10px -15px;`;\n    let popupHtml = `<div class=\"${unclusteredLayerId}-popup\" style=\"${popupHtmlStyle}\">`;\n    if (title) popupHtml += titleHtml;\n    if (address) popupHtml += addressHtml;\n    popupHtml += \"</div>\";\n    return popupHtml;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}