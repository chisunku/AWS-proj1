{"ast":null,"code":"import { __rest as t } from \"tslib\";\nimport * as a from \"react\";\nimport s from \"classnames\";\nimport { Button as e } from \"../Button/Button.js\";\nimport { classNameModifier as i } from \"../shared/utils.js\";\nimport { ComponentClassNames as o } from \"../shared/constants.js\";\nimport { useStyles as r } from \"../shared/styleUtils.js\";\nconst l = a.forwardRef((l, n) => {\n  var {\n      ariaLabel: d,\n      className: m,\n      children: p,\n      isFullWidth: u = !1,\n      isDisabled: c,\n      isLoading: f,\n      loadingText: y = \"\",\n      size: b,\n      style: h,\n      type: g = \"button\",\n      variation: B,\n      testId: j\n    } = l,\n    v = t(l, [\"ariaLabel\", \"className\", \"children\", \"isFullWidth\", \"isDisabled\", \"isLoading\", \"loadingText\", \"size\", \"style\", \"type\", \"variation\", \"testId\"]);\n  const {\n      propStyles: L,\n      nonStyleProps: N\n    } = r(v, h),\n    x = s(o.Button, i(o.Button, b), i(o.Button, B), m);\n  return a.createElement(e, Object.assign({\n    ref: n,\n    className: x,\n    \"data-fullwidth\": u,\n    \"data-loading\": f,\n    \"data-size\": b,\n    \"data-variation\": B,\n    disabled: c || f,\n    type: g,\n    \"data-testid\": j,\n    \"aria-label\": d,\n    style: L\n  }, N), p);\n});\nl.displayName = \"MenuButton\";\nexport { l as MenuButton };","map":null,"metadata":{},"sourceType":"module"}