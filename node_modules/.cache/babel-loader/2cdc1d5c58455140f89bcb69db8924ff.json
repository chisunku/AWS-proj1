{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\nexport default function useControl(onCreate, onRemove, opts) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n  useEffect(() => {\n    var _a;\n    const {\n      map\n    } = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, (_a = opts || onRemove) === null || _a === void 0 ? void 0 : _a.position);\n    }\n    return () => {\n      if (typeof onRemove === 'function') {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n  return ctrl;\n}","map":null,"metadata":{},"sourceType":"module"}