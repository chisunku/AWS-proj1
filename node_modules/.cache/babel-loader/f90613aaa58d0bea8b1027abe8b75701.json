{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as s from \"react\";\nimport t from \"classnames\";\nimport { ComponentClassNames as a, ComponentText as i } from \"../shared/constants.js\";\nimport { isFunction as r, classNameModifier as o } from \"../shared/utils.js\";\nimport { View as l } from \"../View/View.js\";\nimport { Flex as m } from \"../Flex/Flex.js\";\nimport { Button as n } from \"../Button/Button.js\";\nimport { AlertIcon as c } from \"./AlertIcon.js\";\nimport { IconClose as d } from \"../Icon/icons/IconClose.js\";\nconst f = s.forwardRef((f, p) => {\n  var {\n      buttonRef: u,\n      children: b,\n      className: h,\n      dismissButtonLabel: j = i.Alert.dismissButtonLabel,\n      hasIcon: A = !0,\n      heading: E,\n      isDismissible: N = !1,\n      onDismiss: v,\n      variation: B\n    } = f,\n    D = e(f, [\"buttonRef\", \"children\", \"className\", \"dismissButtonLabel\", \"hasIcon\", \"heading\", \"isDismissible\", \"onDismiss\", \"variation\"]);\n  const [I, g] = s.useState(!1),\n    x = s.useCallback(() => {\n      g(!I), r(v) && v();\n    }, [g, v, I]);\n  return !I && s.createElement(m, Object.assign({\n    className: t(a.Alert, h, o(a.Alert, B)),\n    \"data-variation\": B,\n    ref: p,\n    role: \"alert\"\n  }, D), A && s.createElement(c, {\n    variation: B,\n    ariaHidden: !0\n  }), s.createElement(l, {\n    flex: \"1\"\n  }, E && s.createElement(l, {\n    className: a.AlertHeading\n  }, E), s.createElement(l, {\n    className: a.AlertBody\n  }, b)), N && s.createElement(n, {\n    ariaLabel: j,\n    variation: \"link\",\n    className: a.AlertDismiss,\n    onClick: x,\n    ref: u\n  }, s.createElement(d, {\n    \"aria-hidden\": \"true\"\n  })));\n});\nf.displayName = \"Alert\";\nexport { f as Alert };","map":null,"metadata":{},"sourceType":"module"}