{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as t from \"react\";\nimport r from \"classnames\";\nimport { DropdownMenu as a, DropdownMenuTrigger as n, DropdownMenuContent as i } from \"@radix-ui/react-dropdown-menu\";\nimport { ButtonGroup as s } from \"../ButtonGroup/ButtonGroup.js\";\nimport { ComponentClassNames as m } from \"../shared/constants.js\";\nimport \"../View/View.js\";\nimport { IconMenu as o } from \"../Icon/icons/IconMenu.js\";\nimport { MenuButton as l } from \"./MenuButton.js\";\nconst p = \"amplify-menu-trigger-test-id\",\n  g = \"amplify-menu-items-group-test-id\",\n  u = t.forwardRef((p, g) => {\n    var {\n        menuAlign: u = \"start\",\n        children: c,\n        className: d,\n        isOpen: f,\n        size: h,\n        trigger: C,\n        triggerClassName: N,\n        ariaLabel: j,\n        onOpenChange: E\n      } = p,\n      O = e(p, [\"menuAlign\", \"children\", \"className\", \"isOpen\", \"size\", \"trigger\", \"triggerClassName\", \"ariaLabel\", \"onOpenChange\"]);\n    return t.createElement(a, {\n      onOpenChange: E,\n      open: f\n    }, t.createElement(n, {\n      asChild: !0\n    }, null != C ? C : t.createElement(l, {\n      ariaLabel: j,\n      size: h,\n      testId: \"amplify-menu-trigger-test-id\",\n      className: r(m.MenuTrigger, N)\n    }, t.createElement(o, {\n      size: h\n    }))), t.createElement(i, {\n      align: u,\n      portalled: !1\n    }, t.createElement(s, Object.assign({\n      className: r(m.MenuContent, d),\n      ref: g,\n      size: h,\n      testId: \"amplify-menu-items-group-test-id\"\n    }, O), c)));\n  });\nu.displayName = \"Menu\";\nexport { g as MENU_ITEMS_GROUP_TEST_ID, p as MENU_TRIGGER_TEST_ID, u as Menu };","map":null,"metadata":{},"sourceType":"module"}