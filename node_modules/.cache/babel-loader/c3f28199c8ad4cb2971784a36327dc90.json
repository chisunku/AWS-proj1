{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as a from \"react\";\nimport t from \"classnames\";\nimport { Button as i } from \"../Button/Button.js\";\nimport { Flex as n } from \"../Flex/Flex.js\";\nimport { ComponentClassNames as s, ComponentText as l } from \"../shared/constants.js\";\nimport { View as r } from \"../View/View.js\";\nimport { IconChevronLeft as o } from \"../Icon/icons/IconChevronLeft.js\";\nimport { IconChevronRight as m } from \"../Icon/icons/IconChevronRight.js\";\nimport { VisuallyHidden as c } from \"../VisuallyHidden/VisuallyHidden.js\";\nimport { classNameModifier as u, classNameModifierByFlag as g } from \"../shared/utils.js\";\nconst p = \"current\",\n  b = \"ellipsis\",\n  I = p => {\n    var {\n        type: b,\n        page: I,\n        currentPage: d,\n        currentPageLabel: P = l.PaginationItem.currentPageLabel,\n        isDisabled: k,\n        onClick: E,\n        ariaLabel: j\n      } = p,\n      f = e(p, [\"type\", \"page\", \"currentPage\", \"currentPageLabel\", \"isDisabled\", \"onClick\", \"ariaLabel\"]);\n    const C = a.useCallback(() => {\n        E(I, d);\n      }, [I, d, E]),\n      B = a.useCallback(() => {\n        E();\n      }, [E]),\n      L = a.useCallback(() => {\n        E();\n      }, [E]),\n      v = t(s.PaginationItemButton, u(s.PaginationItemButton, \"link\"), g(s.PaginationItemButton, \"disabled\", k)),\n      h = t(s.PaginationItemButton, u(s.PaginationItemButton, \"link\"), g(s.PaginationItemButton, \"disabled\", k));\n    switch (b) {\n      case \"page\":\n        return a.createElement(r, {\n          as: \"li\"\n        }, I === d ? a.createElement(n, Object.assign({\n          \"aria-current\": \"page\",\n          as: \"button\",\n          className: s.PaginationItemCurrent,\n          testId: \"current\"\n        }, f), a.createElement(c, null, P, \":\"), I) : a.createElement(i, Object.assign({\n          className: t(s.PaginationItemButton, u(s.PaginationItemButton, \"link\")),\n          size: \"small\",\n          variation: \"link\",\n          onClick: C,\n          ariaLabel: j\n        }, f), I));\n      case \"next\":\n        return a.createElement(r, {\n          as: \"li\"\n        }, a.createElement(i, Object.assign({\n          className: v,\n          size: \"small\",\n          variation: \"link\",\n          isDisabled: k,\n          onClick: L,\n          ariaLabel: j\n        }, f), a.createElement(m, {\n          size: \"large\"\n        })));\n      case \"previous\":\n        return a.createElement(r, {\n          as: \"li\"\n        }, a.createElement(i, Object.assign({\n          className: h,\n          size: \"small\",\n          variation: \"link\",\n          isDisabled: k,\n          onClick: B,\n          ariaLabel: j\n        }, f), a.createElement(o, {\n          size: \"large\"\n        })));\n      case \"ellipsis\":\n        return a.createElement(r, {\n          as: \"li\"\n        }, a.createElement(n, Object.assign({\n          as: \"span\",\n          className: s.PaginationItemEllipsis,\n          testId: \"ellipsis\"\n        }, f), \"â€¦\"));\n    }\n    return a.createElement(r, {\n      as: \"li\"\n    });\n  };\nI.displayName = \"PaginationItem\";\nexport { p as PAGINATION_CURRENT_TEST_ID, b as PAGINATION_ELLIPSIS_TEST_ID, I as PaginationItem };","map":null,"metadata":{},"sourceType":"module"}