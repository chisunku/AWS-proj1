{"ast":null,"code":"const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst createSupplementaryPoints = require('../utils/create_supplementary_points');\nconst moveFeatures = require('../utils/move_features');\nconst Constants = require('../utils/constants');\nconst constrainFeatureMovement = require(\"../utils/constrain_feature_movement\");\nconst distance = require('@turf/distance').default;\nconst turfHelpers = require('@turf/helpers');\nconst circle = require('@turf/circle').default;\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\nconst DirectModeOverride = MapboxDraw.modes.direct_select;\nDirectModeOverride.dragFeature = function (state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected().filter(feature => feature.properties.isCircle).map(circle => circle.properties.center).forEach(center => {\n    center[0] += delta.lng;\n    center[1] += delta.lat;\n  });\n  state.dragMoveLocation = e.lngLat;\n};\nDirectModeOverride.dragVertex = function (state, e, delta) {\n  if (state.feature.properties.isCircle) {\n    const center = state.feature.properties.center;\n    const movedVertex = [e.lngLat.lng, e.lngLat.lat];\n    const radius = distance(turfHelpers.point(center), turfHelpers.point(movedVertex), {\n      units: 'kilometers'\n    });\n    const circleFeature = circle(center, radius);\n    state.feature.incomingCoords(circleFeature.geometry.coordinates);\n    state.feature.properties.radiusInKm = radius;\n  } else {\n    const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n    const selectedCoordPoints = selectedCoords.map(coords => ({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.POINT,\n        coordinates: coords\n      }\n    }));\n    const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n    for (let i = 0; i < selectedCoords.length; i++) {\n      const coord = selectedCoords[i];\n      state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n    }\n  }\n};\nDirectModeOverride.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    const supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    });\n    supplementaryPoints.forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\nmodule.exports = DirectModeOverride;","map":null,"metadata":{},"sourceType":"script"}