{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useImperativeHandle, useRef, useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nconst GeolocateControl = forwardRef((props, ref) => {\n  const thisRef = useRef({\n    props\n  });\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    const gc = new mapLib.GeolocateControl(props);\n    // Hack: fix GeolocateControl reuse\n    // When using React strict mode, the component is mounted twice.\n    // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\n    const setupUI = gc._setupUI;\n    gc._setupUI = args => {\n      if (!gc._container.hasChildNodes()) {\n        setupUI(args);\n      }\n    };\n    gc.on('geolocate', e => {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onGeolocate) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('error', e => {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onError) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('outofmaxbounds', e => {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onOutOfMaxBounds) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('trackuserlocationstart', e => {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onTrackUserLocationStart) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    gc.on('trackuserlocationend', e => {\n      var _a, _b;\n      (_b = (_a = thisRef.current.props).onTrackUserLocationEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n    });\n    return gc;\n  }, {\n    position: props.position\n  });\n  thisRef.current.props = props;\n  useImperativeHandle(ref, () => ({\n    trigger: () => ctrl.trigger()\n  }), []);\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n});\nGeolocateControl.displayName = 'GeolocateControl';\nexport default React.memo(GeolocateControl);","map":null,"metadata":{},"sourceType":"module"}