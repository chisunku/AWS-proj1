{"ast":null,"code":"import { __rest as e } from \"tslib\";\nimport * as a from \"react\";\nimport r from \"classnames\";\nimport { classNameModifier as o, classNameModifierByFlag as l } from \"../shared/utils.js\";\nimport { ComponentClassNames as t } from \"../shared/constants.js\";\nimport { Flex as i } from \"../Flex/Flex.js\";\nimport { View as s } from \"../View/View.js\";\nimport { IconExpandMore as c } from \"../Icon/icons/IconExpandMore.js\";\nconst m = a.forwardRef((m, n) => {\n  var {\n      autoComplete: d,\n      className: p,\n      size: u,\n      variation: f,\n      value: v,\n      defaultValue: h,\n      hasError: E,\n      icon: S = a.createElement(c, null),\n      iconColor: j,\n      children: C,\n      placeholder: N,\n      isDisabled: b,\n      isRequired: V\n    } = m,\n    x = e(m, [\"autoComplete\", \"className\", \"size\", \"variation\", \"value\", \"defaultValue\", \"hasError\", \"icon\", \"iconColor\", \"children\", \"placeholder\", \"isDisabled\", \"isRequired\"]);\n  const q = void 0 === v && void 0 === h && N,\n    w = r(t.Select, t.FieldGroupControl, o(t.Select, u), o(t.Select, f), l(t.Select, \"error\", E), p);\n  return a.createElement(s, {\n    className: t.SelectWrapper\n  }, a.createElement(s, Object.assign({\n    \"aria-invalid\": E,\n    as: \"select\",\n    autoComplete: d,\n    value: v,\n    defaultValue: q ? \"\" : h,\n    isDisabled: b,\n    required: V,\n    \"data-size\": u,\n    \"data-variation\": f,\n    className: w,\n    ref: n\n  }, x), N && a.createElement(\"option\", {\n    value: \"\"\n  }, N), C), a.createElement(i, {\n    className: t.SelectIconWrapper,\n    color: j\n  }, S));\n});\nm.displayName = \"Select\";\nexport { m as Select };","map":null,"metadata":{},"sourceType":"module"}