import{__rest as e}from"tslib";import*as a from"react";import{Root as l}from"@radix-ui/react-accordion";import t from"classnames";import{useDeprecationWarning as s}from"../../hooks/useDeprecationWarning.js";import{ComponentClassNames as r}from"../shared/constants.js";import{splitPrimitiveProps as n}from"../shared/styleUtils.js";const o=a.forwardRef(((o,i)=>{var{children:p,className:m,defaultValue:d,isCollapsible:u,onChange:c,onValueChange:f,testId:h,type:g="single",value:C}=o,V=e(o,["children","className","defaultValue","isCollapsible","onChange","onValueChange","testId","type","value"]);const{rest:b}=n(V),x=null!=f?f:c;s({shouldWarn:!!c,message:"Expander `onChange` prop will be deprecated in the next major release of @aws-amplify/ui-react. Please replace usage with `onValueChange`."});return"multiple"===g?a.createElement(l,Object.assign({className:t(r.Expander,m),"data-testid":h,defaultValue:d,onValueChange:x,ref:i,type:g,value:C},b),p):a.createElement(l,Object.assign({className:t(r.Expander,m),collapsible:u,"data-testid":h,defaultValue:d,onValueChange:x,ref:i,type:g,value:C},b),p)}));o.displayName="Expander";export{o as Expander};
